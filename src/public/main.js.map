{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/_is-array.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_meta.js","webpack:///./node_modules/core-js/modules/_object-assign.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/core-js/modules/_object-gops.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_object-pie.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app-routing/routes.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/attendance/attendance.component.css","webpack:///./src/app/attendance/attendance.component.html","webpack:///./src/app/attendance/attendance.component.ts","webpack:///./src/app/chapter-attendance/chapter-attendance.component.css","webpack:///./src/app/chapter-attendance/chapter-attendance.component.html","webpack:///./src/app/chapter-attendance/chapter-attendance.component.ts","webpack:///./src/app/chapter-events/chapter-events.component.css","webpack:///./src/app/chapter-events/chapter-events.component.html","webpack:///./src/app/chapter-events/chapter-events.component.ts","webpack:///./src/app/chapter-profile/chapter-profile.component.css","webpack:///./src/app/chapter-profile/chapter-profile.component.html","webpack:///./src/app/chapter-profile/chapter-profile.component.ts","webpack:///./src/app/chapterdetails/chapterdetails.component.css","webpack:///./src/app/chapterdetails/chapterdetails.component.html","webpack:///./src/app/chapterdetails/chapterdetails.component.ts","webpack:///./src/app/chaptereventsch/chaptereventsch.component.css","webpack:///./src/app/chaptereventsch/chaptereventsch.component.html","webpack:///./src/app/chaptereventsch/chaptereventsch.component.ts","webpack:///./src/app/chapters-view-ch/chapters-view-ch.component.css","webpack:///./src/app/chapters-view-ch/chapters-view-ch.component.html","webpack:///./src/app/chapters-view-ch/chapters-view-ch.component.ts","webpack:///./src/app/chapters-view/chapters-view.component.css","webpack:///./src/app/chapters-view/chapters-view.component.html","webpack:///./src/app/chapters-view/chapters-view.component.ts","webpack:///./src/app/create-event/create-event.component.css","webpack:///./src/app/create-event/create-event.component.html","webpack:///./src/app/create-event/create-event.component.ts","webpack:///./src/app/event-detail/event-detail.component.css","webpack:///./src/app/event-detail/event-detail.component.html","webpack:///./src/app/event-detail/event-detail.component.ts","webpack:///./src/app/feed/feed.component.css","webpack:///./src/app/feed/feed.component.html","webpack:///./src/app/feed/feed.component.ts","webpack:///./src/app/google-auth/google-auth.component.css","webpack:///./src/app/google-auth/google-auth.component.html","webpack:///./src/app/google-auth/google-auth.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main-view-chapter/main-view-chapter.component.css","webpack:///./src/app/main-view-chapter/main-view-chapter.component.html","webpack:///./src/app/main-view-chapter/main-view-chapter.component.ts","webpack:///./src/app/main-view/main-view.component.css","webpack:///./src/app/main-view/main-view.component.html","webpack:///./src/app/main-view/main-view.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/attendance.service.ts","webpack:///./src/app/services/chapters.service.ts","webpack:///./src/app/services/eventdetail.service.ts","webpack:///./src/app/services/feed.service.ts","webpack:///./src/app/services/feedback.service.ts","webpack:///./src/app/services/newevent.service.ts","webpack:///./src/app/services/profile.service.ts","webpack:///./src/app/shared/baseurl.ts","webpack:///./src/app/shared/contact.ts","webpack:///./src/app/shared/restConfig.ts","webpack:///./src/app/shared/social.ts","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/app/view-attendance/view-attendance.component.css","webpack:///./src/app/view-attendance/view-attendance.component.html","webpack:///./src/app/view-attendance/view-attendance.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = false;\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","exports.f = {}.propertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { routes } from './routes';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { EventDetailComponent } from '../event-detail/event-detail.component';\r\nimport { UserProfileComponent } from '../user-profile/user-profile.component';\r\nimport { MainViewComponent } from '../main-view/main-view.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { ChaptersViewComponent } from '../chapters-view/chapters-view.component';\r\nimport { ChapterEventsComponent } from '../chapter-events/chapter-events.component';\r\nimport { FeedComponent } from '../feed/feed.component';\r\nimport { ChapterdetailsComponent } from '../chapterdetails/chapterdetails.component';\r\nimport { MainViewChapterComponent } from '../main-view-chapter/main-view-chapter.component';\r\nimport { ChapterProfileComponent } from '../chapter-profile/chapter-profile.component';\r\nimport { ChaptersViewChComponent } from '../chapters-view-ch/chapters-view-ch.component';\r\nimport { ChaptereventschComponent } from '../chaptereventsch/chaptereventsch.component';\r\nimport { CreateEventComponent } from '../create-event/create-event.component';\r\nimport { AttendanceComponent } from '../attendance/attendance.component';\r\nimport { ChapterAttendanceComponent } from '../chapter-attendance/chapter-attendance.component';\r\nimport { ViewAttendanceComponent } from '../view-attendance/view-attendance.component';\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { GoogleAuthComponent } from '../google-auth/google-auth.component'\r\n\r\nexport const routes: Routes = [\r\n    { path: 'login' ,component: LoginComponent},\r\n    { path: 'user' ,component: MainViewComponent, children:[\r\n            { path: '', redirectTo: '/user/feed', pathMatch: 'full'},\r\n            { path: 'profile',component: UserProfileComponent},\r\n            { path: 'chapters',component: ChaptersViewComponent},\r\n            { path: 'events',component: ChapterEventsComponent},\r\n            { path: 'feed',component: FeedComponent},\r\n            { path: 'event/:id',component: EventDetailComponent },\r\n            { path: 'chapter/:id',component: ChapterdetailsComponent},\r\n        ]},\r\n    { path: 'chapter' ,component: MainViewChapterComponent, children:[\r\n            { path: '', redirectTo: '/chapter/feed', pathMatch: 'full'},\r\n            { path: 'feed',component: FeedComponent},\r\n            { path: 'profile',component: ChapterProfileComponent},\r\n            { path: 'event/:id',component: EventDetailComponent },\r\n            { path: 'chapters/:id',component: ChapterdetailsComponent},\r\n            { path: 'chapters',component: ChaptersViewChComponent},\r\n            { path: 'events',component: ChaptereventschComponent},\r\n            { path: 'newEvent',component: CreateEventComponent},\r\n            { path: 'attendance/:id',component: AttendanceComponent},\r\n            { path: 'attendance',component: ChapterAttendanceComponent},\r\n            { path: 'viewAttendance/:id',component: ViewAttendanceComponent}\r\n        ]},\r\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n    { path: 'register' ,component: RegisterComponent},\r\n    { path: 'google' ,component: GoogleAuthComponent}\r\n];\r\n","module.exports = \"\"","module.exports = \"<!-- <app-main-view></app-main-view> -->\\r\\n<!-- <app-login></app-login> -->\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'iwp';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeedComponent } from './feed/feed.component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms'; \r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { baseURL } from './shared/baseurl';\r\nimport { RestangularModule, Restangular } from 'ngx-restangular';\r\nimport { RestangularConfigFactory } from './shared/restConfig';\r\nimport { SocialLoginModule,AuthServiceConfig,GoogleLoginProvider,FacebookLoginProvider} from \"angular-6-social-login\";\r\nimport { getAuthServiceConfigs } from './shared/social'\r\n\r\n\r\nimport 'hammerjs';\r\nimport { EventDetailComponent } from './event-detail/event-detail.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { MainViewComponent } from './main-view/main-view.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ChaptersViewComponent } from './chapters-view/chapters-view.component';\r\nimport { ChapterEventsComponent } from './chapter-events/chapter-events.component';\r\nimport { ChapterdetailsComponent } from './chapterdetails/chapterdetails.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material';\r\n\r\n\r\n\r\n// Services\r\nimport { FeedService } from './services/feed.service';\r\nimport { ProfileService } from './services/profile.service';\r\nimport { EventdetailService } from './services/eventdetail.service';\r\nimport { FeedbackService } from './services/feedback.service';\r\nimport { MainViewChapterComponent } from './main-view-chapter/main-view-chapter.component';\r\nimport { ChapterProfileComponent } from './chapter-profile/chapter-profile.component';\r\nimport { ChaptersViewChComponent } from './chapters-view-ch/chapters-view-ch.component';\r\nimport { ChaptereventschComponent } from './chaptereventsch/chaptereventsch.component';\r\nimport { CreateEventComponent } from './create-event/create-event.component';\r\nimport { AttendanceComponent } from './attendance/attendance.component';\r\nimport { ChapterAttendanceComponent } from './chapter-attendance/chapter-attendance.component';\r\nimport { ViewAttendanceComponent } from './view-attendance/view-attendance.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { GoogleAuthComponent } from './google-auth/google-auth.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FeedComponent,\r\n    EventDetailComponent,\r\n    UserProfileComponent,\r\n    MainViewComponent,\r\n    LoginComponent,\r\n    ChaptersViewComponent,\r\n    ChapterEventsComponent,\r\n    ChapterdetailsComponent,\r\n    MainViewChapterComponent,\r\n    ChapterProfileComponent,\r\n    ChaptersViewChComponent,\r\n    ChaptereventschComponent,\r\n    CreateEventComponent,\r\n    AttendanceComponent,\r\n    ChapterAttendanceComponent,\r\n    ViewAttendanceComponent,\r\n    RegisterComponent,\r\n    GoogleAuthComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSliderModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    AppRoutingModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatDividerModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatStepperModule,\r\n    SocialLoginModule,\r\n    MatBadgeModule,\r\n    MatProgressBarModule,\r\n    MatSnackBarModule,\r\n    RestangularModule.forRoot(RestangularConfigFactory)\r\n  ],\r\n  providers: [FeedService,ProfileService,EventdetailService,FeedbackService,{provide: 'BaseURL', useValue: baseURL},{\r\n    provide: AuthServiceConfig,\r\n    useFactory: getAuthServiceConfigs\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"*{\\r\\n    margin: 0;\\r\\n}\\r\\n.attendance{\\r\\n    width: 90%;\\r\\n    display: flex;\\r\\n    margin: auto;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center\\r\\n}\\r\\n.example-card {\\r\\n    max-width: 90%;\\r\\n    margin: auto\\r\\n  }\\r\\n.example-header-image {\\r\\n    background-image: url('chapter.png');\\r\\n    background-size: cover;\\r\\n  }\\r\\n.form{\\r\\n      width: 100%;\\r\\n  }\\r\\n.row{\\r\\n      display: flex;\\r\\n      justify-content: space-between;\\r\\n      padding: 0px 20px;\\r\\n      margin: 10px 0px;\\r\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.15);\\r\\n  }\\r\\n.lol{\\r\\n      display: block;\\r\\n      width: 60%;\\r\\n      margin: 10px auto\\r\\n  }\"","module.exports = \"<!-- \\n<div class=\\\"attendance\\\" *ngIf=\\\"created\\\">\\n    <p>{{ attendanceForm.value | json }}</p>\\n</div> -->\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!created\\\" color=\\\"accent\\\"></mat-progress-bar>\\n<mat-card class=\\\"example-card\\\" *ngIf=\\\"created\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n      <mat-card-title>{{event.eventName}}</mat-card-title>\\n      <mat-card-subtitle>Attendance</mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-divider></mat-divider>\\n    <mat-card-content>\\n        <form class=\\\"form\\\" novalidate [formGroup]=\\\"attendanceForm\\\" #aform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <p class=\\\"row\\\" *ngFor=\\\"let participant of participants\\\">\\n              <span>{{participant.name}}</span>\\n              <mat-slide-toggle formControlName=\\\"{{participant.userId}}\\\"></mat-slide-toggle>\\n            <p>\\n              <br>\\n              <button style=\\\"margin:auto;display:block\\\" type=\\\"submit\\\" mat-stroked-button color=\\\"accent\\\">Submit</button>\\n            </p>\\n        </form>\\n        <mat-progress-bar class=\\\"lol\\\" *ngIf=\\\"successUpload\\\" mode=\\\"buffer\\\"></mat-progress-bar>\\n    </mat-card-content>\\n    <!-- <mat-card-actions>\\n      \\n    </mat-card-actions> -->\\n  </mat-card>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AttendanceService } from '../services/attendance.service';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { Restangular } from 'ngx-restangular';\nimport { EventdetailService } from '../services/eventdetail.service';\nimport {MatSnackBar} from '@angular/material';\n\n\n@Component({\n  selector: 'app-attendance',\n  templateUrl: './attendance.component.html',\n  styleUrls: ['./attendance.component.css']\n})\nexport class AttendanceComponent implements OnInit {\n\n  @ViewChild('aform') aFormDirective;\n  attendanceForm: FormGroup;\n  participants: any[];\n  aformData: any;\n  finalAttendance:any;\n  constructor(private fb: FormBuilder,private route: ActivatedRoute, private attendanceservice:AttendanceService, private restangular: Restangular, private eventdetailservice: EventdetailService,public snackBar: MatSnackBar) { }\n\n   createForm(x){\n    this.attendanceForm = this.fb.group(x);\n   }\n\n\n   created: any = false;\n   event: any;\n\n  ngOnInit() {\n    const id = this.route.snapshot.params['id'];\n    console.log(id);\n    this.eventdetailservice.getEventbyId(id).subscribe((data) => {\n      this.event = data.event;\n      console.log(data.event);\n      this.attendanceservice.getUsersByevent(id).subscribe((data) => {\n        this.participants=data.users;\n        console.log(this.participants);\n        this.formdata(this.participants);\n        this.created = true\n      })\n    });\n  }\n\n  formdata(data){\n    var x:any ={};\n    var y:any;\n    var num: number;\n\n    for (num = 0; num < data.length; num++) {\n      y = data[num].userId;\n      x[y] = data[num].attended;\n      // console.log(y)\n    }\n    console.log(x);\n    this.createForm(x);\n\n  }\n\n  onSubmit(){\n    this.finalAttendance = this.attendanceForm.value;\n    console.log(this.finalAttendance);\n    this.successUpload = true;\n    var num: number;\n    var key: any;\n    var attended_flag: any;\n    var data = this.participants\n    for (num = 0; num < this.participants.length; num++) {\n      key = data[num].userId;\n      // console.log(this.finalAttendance[key]);\n      attended_flag = this.finalAttendance[key];\n      data[num].attended = attended_flag;\n    }\n    console.log(data);\n    const id = this.route.snapshot.params['id'];\n    this.restangular.all('api/organization/'+id+'/post-attendance').post(data).subscribe((data) => \n    {\n      console.log(data)\n      this.openSnackBar(\"Uploaded Successfully\", ':)')\n      this.successUpload = false;\n    })\n  }\n  successUpload: any = false;\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n}\n","module.exports = \"mat-panel-description{\\r\\n    justify-content: flex-end\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!pastEvents && ! upcomingEvents\\\" color=\\\"accent\\\"></mat-progress-bar>\\n<mat-tab-group color=\\\"primary\\\" backgroundColor=\\\"primary\\\" *ngIf=\\\"pastEvents && upcomingEvents\\\">\\n  <mat-tab label=\\\"Attendance History\\\">\\n    <mat-accordion>\\n      <mat-expansion-panel *ngFor=\\\"let event of pastEvents\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            {{event.eventName}}\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Conducted By {{event.organiser}}\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <p>Event Description</p>\\n        <p>{{event.description}}</p>\\n        <button mat-stroked-button color=\\\"accent\\\" [routerLink]=\\\"['/chapter/viewAttendance/', event._id]\\\">View Attendance</button>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </mat-tab>\\n  <mat-tab label=\\\"Attendance Update\\\">\\n    <mat-accordion>\\n      <mat-expansion-panel *ngFor=\\\"let event of upcomingEvents\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            {{event.eventName}}\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Conducted By {{event.organiser}}\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <p>Event Description</p>\\n        <p>{{event.description}}</p>\\n        <button mat-stroked-button color=\\\"accent\\\" [routerLink]=\\\"['/chapter/attendance/', event._id]\\\">Mark Attendance</button>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </mat-tab>\\n</mat-tab-group>\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EventdetailService } from '../services/eventdetail.service';\nimport { ChaptersService } from '../services/chapters.service'\n\n@Component({\n  selector: 'app-chapter-attendance',\n  templateUrl: './chapter-attendance.component.html',\n  styleUrls: ['./chapter-attendance.component.css']\n})\nexport class ChapterAttendanceComponent implements OnInit {\n\n  constructor(private eventdetailservice: EventdetailService, private chapterservice: ChaptersService) { }\n\n  pastEvents: any;\n  upcomingEvents: any;\n  url: any\n  profile: any\n  ngOnInit() {\n    this.chapterservice.getChapterProfile().subscribe((data) => {\n      this.profile = data.organization;\n      console.log(this.profile);\n      const id = this.profile.userId._id;\n      console.log(id)\n      this.eventdetailservice.getEventsByChapter(id).subscribe((data) =>{\n        this.upcomingEvents = data.upcomingEvents;\n        this.pastEvents = data.conductedEvents;\n        console.log(this.upcomingEvents);\n        console.log(this.pastEvents);\n      })\n    })\n  }\n\n}\n","module.exports = \"mat-panel-description{\\r\\n    justify-content: flex-end\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!events\\\" color=\\\"accent\\\"></mat-progress-bar>\\r\\n<mat-accordion>\\r\\n  <mat-expansion-panel *ngFor=\\\"let event of events\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        {{event.eventName}}\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Conducted By {{event.organiser}}\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    <p>Event Description</p>\\r\\n    <p>{{event.description}}</p>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/user/event', event._id]\\\">View Details</button>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\"","import { Component, OnInit } from '@angular/core';\r\nimport { EventdetailService } from '../services/eventdetail.service'\r\n\r\n@Component({\r\n  selector: 'app-chapter-events',\r\n  templateUrl: './chapter-events.component.html',\r\n  styleUrls: ['./chapter-events.component.css']\r\n})\r\nexport class ChapterEventsComponent implements OnInit {\r\n\r\n  events: any;\r\n  url: any\r\n\r\n  constructor(private eventdetailservice: EventdetailService) { }\r\n\r\n  ngOnInit() {\r\n    this.eventdetailservice.getEvents().subscribe(events => {this.events = events.events;console.log(this.events)});\r\n  }\r\n\r\n}\r\n","module.exports = \"*{\\r\\n    padding: 0px;\\r\\n    margin: 0px\\r\\n}\\r\\n\\r\\n.profile-top{\\r\\n    background: url('form_bg.png');\\r\\n    width: 100%;\\r\\n    height: 200px;\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat\\r\\n}\\r\\n\\r\\n.profile-header{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    position: relative;\\r\\n    top: -77px\\r\\n}\\r\\n\\r\\n.profile-head{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-left: 50px\\r\\n}\\r\\n\\r\\n.profile-img{\\r\\n    height: 154px;\\r\\n    width: 154px;\\r\\n    margin-right: 50px;\\r\\n    border-radius: 50%;\\r\\n    border:1px solid #484848\\r\\n}\\r\\n\\r\\n.profile-img img{\\r\\n    border-radius: 50%;\\r\\n    border: 2px solid white;\\r\\n}\\r\\n\\r\\n.flex{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    padding: 20px 0px;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    width: 30%;\\r\\n}\\r\\n\\r\\n.history{\\r\\n    padding: 10px;\\r\\n    width: 70%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.leaders{\\r\\n    padding:10px;\\r\\n}\\r\\n\\r\\nmat-panel-description{\\r\\n    justify-content: flex-end\\r\\n}\\r\\n\\r\\n.location{\\r\\n    padding: 30px 0px;\\r\\n    min-height: 250px;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-around\\r\\n}\\r\\n\\r\\n.loc_text,.map{\\r\\n    width: 50%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center\\r\\n}\\r\\n\\r\\n.pad{\\r\\n    padding-left: 40px;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.half-width{\\r\\n    width: 40%;\\r\\n    padding: 0px 10px;\\r\\n}\\r\\n\\r\\n.full-width{\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\n.feedback{\\r\\n    padding: 0px 20px;\\r\\n}\\r\\n\\r\\n.lol{\\r\\n    padding: 0px 20px;\\r\\n}\\r\\n\\r\\nmat-card-title{\\r\\n    font-size: 15px;\\r\\n    font-weight: bold\\r\\n}\\r\\n\\r\\n.head{\\r\\n    font-size: 17px;\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.contact-btn>*{\\r\\n    margin-right: 10px;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.motto{\\r\\n\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 600px){\\r\\n    .pad{\\r\\n        padding: 5px;\\r\\n    }\\r\\n    .location{\\r\\n        flex-direction: column;\\r\\n    }\\r\\n    .loc_text,.map{\\r\\n        width: 100%;\\r\\n    }\\r\\n    .flex{\\r\\n        flex-direction: column;\\r\\n    }\\r\\n    .card{\\r\\n        width: 100%;\\r\\n    }\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!profile\\\" color=\\\"accent\\\"></mat-progress-bar>\\n<mat-tab-group color=\\\"primary\\\" *ngIf=\\\"profile\\\">\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <mat-icon class=\\\"example-tab-icon\\\">local_library</mat-icon>\\n      About\\n    </ng-template>\\n    <div class=\\\"profile-top\\\">\\n    </div>\\n      <div class=\\\"profile-header\\\">\\n        <div class=\\\"profile-img\\\"><img src=\\\"../../assets/images/alberto.png\\\" height=\\\"150px\\\" width=\\\"150px\\\"></div>\\n        <div class=\\\"profile-head\\\"><h4 style=\\\"color:white\\\">{{profile.userId.name}}</h4><h4>{{profile.domain}}</h4></div>\\n      </div>\\n    <div>\\n      <div>\\n      <hr>\\n      <div class=\\\"flex\\\">\\n          <div class=\\\"history\\\">\\n            <h2>Our History</h2>\\n            <p>{{profile.userId.description}}</p>\\n          </div>\\n        <div class=\\\"card\\\">\\n          <mat-card>\\n            <mat-card-header>\\n              <mat-card-title>\\n              <h3>Facts At a Glance</h3>\\n              </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content class=\\\"lol\\\">\\n              <dl>\\n                <dt>Started</dt>\\n                <dd>3 Feb. 2013</dd>\\n                <dt>Major Stake Holder</dt>\\n                <dd>HK Fine Foods Inc.</dd>\\n                <dt>Last Year's Turnover</dt>\\n                <dd>$1,250,375</dd>\\n                <dt>Employees</dt>\\n                <dd>40</dd>\\n              </dl>\\n            </mat-card-content>\\n          </mat-card>\\n        </div>\\n      </div>\\n    </div>\\n      \\n    <div>\\n      <mat-card class=\\\"motto\\\">\\n        \\n          <h4>You better cut the pizza in four pieces because\\n              I'm not hungry enough to eat six.</h4>\\n          <footer>-- Yogi Berra,\\n            <cite>The Wit and Wisdom of Yogi Berra,\\n              P. Pepe, Diversion Books, 2014</cite>\\n          </footer>\\n        \\n      </mat-card>\\n    </div>\\n    <div class=\\\"leaders\\\">\\n        <h3>Board Members</h3>\\n        <mat-list>\\n            <mat-list-item >\\n                    <img matListAvatar src=\\\"../../assets/images/alberto.png\\\" alt=\\\"fgsd\\\">\\n                    <h3 matLine>Lorem Ipsum</h3>\\n                    <p matLine>\\n                      <span>Lorem Dolor MAtis ipsum Lorem Dolor MAtis ipsum Lorem Dolor MAtis ipsum</span> \\n                    </p>\\n                    <p matLine>\\n                        <span> Lorem Dolor MAtis ipsum </span>\\n                    </p>\\n            </mat-list-item>\\n            <mat-list-item >\\n                <img matListAvatar src=\\\"../../assets/images/alberto.png\\\" alt=\\\"fgsd\\\">\\n                <h3 matLine>Lorem Ipsum</h3>\\n                <p matLine>\\n                  <span>Lorem Dolor MAtis ipsum Lorem Dolor MAtis ipsum Lorem Dolor MAtis ipsum</span> \\n                </p>\\n                <p matLine>\\n                    <span> Lorem Dolor MAtis ipsum </span>\\n                </p>\\n            </mat-list-item>\\n        </mat-list>  \\n      </div>\\n    </div>\\n  </mat-tab>\\n\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <mat-icon class=\\\"example-tab-icon\\\">school</mat-icon>\\n      Events\\n    </ng-template>\\n    <p class=\\\"head\\\" *ngIf=\\\"upcomingEvent\\\">\\n      Upcoming Events\\n      <mat-icon  matBadge=\\\"{{upcomingEvent.length}}\\\" matBadgeColor=\\\"accent\\\">school</mat-icon>\\n    </p>\\n    <mat-accordion>\\n        <mat-expansion-panel *ngFor=\\\"let event of upcomingEvent\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              {{event.eventName}}\\n            </mat-panel-title>\\n            <mat-panel-description>\\n              Conducted By {{event.organiser}}\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <p>Event Description</p>\\n          <p>{{event.description}}</p>\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/chapter/event', event._id]\\\">View Details</button>\\n        </mat-expansion-panel>\\n      </mat-accordion>\\n      <p class=\\\"head\\\" *ngIf=\\\"pastEvent\\\">\\n        Past Events\\n        <mat-icon matBadge=\\\"{{pastEvent.length}}\\\" matBadgeColor=\\\"accent\\\">school</mat-icon>\\n      </p>\\n      <mat-accordion>\\n        <mat-expansion-panel *ngFor=\\\"let event of pastEvent\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              {{event.eventName}}\\n            </mat-panel-title>\\n            <mat-panel-description>\\n              Conducted By {{event.organiser}}\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <p>Event Description</p>\\n          <p>{{event.description}}</p>\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/chapter/event', event._id]\\\">View Details</button>\\n        </mat-expansion-panel>\\n      </mat-accordion>\\n  </mat-tab>\\n\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <mat-icon class=\\\"example-tab-icon\\\">message</mat-icon>\\n      Contact\\n    </ng-template>\\n\\n    <div class=\\\"container\\\" fxLayout=\\\"column\\\"  fxLayoutGap=\\\"10px\\\">\\n    <div>\\n      <div class=\\\"location\\\">\\n        <div class=\\\"loc_text pad\\\">\\n          <h4>Our Address</h4>\\n          <address>\\n            <p>{{profile.userId.name}}</p>\\n            <p>VIT University</p>\\n            <p>Vellore</p><br>\\n            <i class=\\\"fa fa-phone\\\"></i>: +{{profile.userId.phone}}<br>\\n            <i class=\\\"fa fa-envelope\\\"></i>: \\n            <a href=\\\"mailto:{{profile.userId.email}}\\\">{{profile.userId.email}}</a>\\n          </address>\\n          <p></p>\\n          <div class=\\\"contact-btn\\\">\\n            <a mat-stroked-button color=\\\"accent\\\" href=\\\"tel:+{{profile.userId.phone}}\\\"><i class=\\\"fa fa-phone\\\"></i> Call</a>\\n            <a mat-stroked-button color=\\\"accent\\\" href=\\\"mailto:{{profile.userId.email}}\\\"><i class=\\\"fa fa-envelope-o\\\"></i> Email</a>\\n          </div>\\n        </div>\\n        <div class=\\\"map\\\"> \\n            <iframe src=\\\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d7775.936449711567!2d79.15989618518067!3d12.973884160513077!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bad479f0ccbe067%3A0xfef222e5f36ecdeb!2sVellore+Institute+of+Technology!5e0!3m2!1sen!2sin!4v1538511589452\\\" width=\\\"100%\\\" height=\\\"100%\\\" frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <mat-card>\\n      <mat-card-header>\\n          <div mat-card-avatar><i class=\\\"material-icons\\\">\\n              notification_important\\n              </i></div>\\n          <mat-card-title>Recieved Feedback</mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n          <div class=\\\"feedback\\\" *ngFor=\\\"let feedback of feedbacks\\\">\\n                <p>\\n                  <span>{{feedback.firstname}} {{feedback.lastname}}</span>\\n                </p>\\n                <p>\\n                  <span *ngIf=\\\"feedback.contactMethod == 'Tel'\\\"><i class=\\\"material-icons\\\">\\n                      call\\n                      </i>{{feedback.telnum}}\\n                    </span>\\n                    <span *ngIf=\\\"feedback.contactMethod == 'Email'\\\"><i class=\\\"material-icons\\\">\\n                          mail_outline\\n                          </i> {{feedback.email}}\\n                  </span>\\n                </p>\\n                <p>\\n                  <span>{{feedback.message}}</span>\\n                </p>\\n                <mat-divider></mat-divider>\\n          </div>   \\n      </mat-card-content>\\n    </mat-card>\\n\\n\\n\\n\\n  <!-- <mat-list>\\n    <mat-list-item>\\n\\n      <mat-divider></mat-divider>\\n    </mat-list-item>\\n \\n    <mat-list-item>Item 2</mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>Item 3</mat-list-item>\\n  </mat-list>-->\\n  </mat-tab> \\n</mat-tab-group>\\n<div *ngIf=\\\"profile\\\" style=\\\"display:flex;justify-content:center\\\">\\n  <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"goBack()\\\">BACK</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ChaptersService } from '../services/chapters.service'\nimport { FeedbackService } from '../services/feedback.service'\nimport { EventdetailService } from '../services/eventdetail.service'\n\n@Component({\n  selector: 'app-chapter-profile',\n  templateUrl: './chapter-profile.component.html',\n  styleUrls: ['./chapter-profile.component.css']\n})\nexport class ChapterProfileComponent implements OnInit {\n\n  profile: any;\n  pastEvent: any;\n  upcomingEvent: any;\n  feedbacks: any;\n\n  constructor(private chapterservice: ChaptersService,private eventdetailservice: EventdetailService, private feedbackservice: FeedbackService) { }\n\n  ngOnInit() {\n    this.chapterservice.getChapterProfile().subscribe((data) => {\n      this.profile = data.organization;\n      console.log(this.profile);\n      const id = this.profile.userId._id;\n      this.feedbacks = this.profile.feedback\n      console.log(id)\n      this.eventdetailservice.getEventsByChapter(id).subscribe((data) =>{\n        this.upcomingEvent = data.upcomingEvents;\n        this.upcomingEvent.length = data.upcomingEvents.length;\n        this.pastEvent = data.conductedEvents;\n        this.pastEvent.length = data.conductedEvents.length;\n        console.log(this.upcomingEvent);\n        console.log(this.pastEvent);\n      });\n      // this.feedbackservice.getFeedback().subscribe((data) => {\n      //   console.log(data.feedbacks);\n      //   this.feedbacks = data.feedbacks;\n      //   console.log(\"hahha\")\n      // })\n    })\n  }\n\n}\n","module.exports = \"*{\\r\\n    padding: 0px;\\r\\n    margin: 0px\\r\\n}\\r\\n\\r\\n.profile-top{\\r\\n    background: url('form_bg.png');\\r\\n    width: 100%;\\r\\n    height: 200px;\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat\\r\\n}\\r\\n\\r\\n.profile-header{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    position: relative;\\r\\n    top: -77px\\r\\n}\\r\\n\\r\\n.profile-head{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-left: 50px\\r\\n}\\r\\n\\r\\n.profile-img{\\r\\n    height: 154px;\\r\\n    width: 154px;\\r\\n    margin-right: 50px;\\r\\n    border-radius: 50%;\\r\\n    border:1px solid #484848\\r\\n}\\r\\n\\r\\n.profile-img img{\\r\\n    border-radius: 50%;\\r\\n    border: 2px solid white;\\r\\n}\\r\\n\\r\\n.flex{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    padding: 20px 0px;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    width: 30%;\\r\\n}\\r\\n\\r\\n.history{\\r\\n    padding: 10px;\\r\\n    width: 70%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.leaders{\\r\\n    padding:10px;\\r\\n}\\r\\n\\r\\nmat-panel-description{\\r\\n    justify-content: flex-end\\r\\n}\\r\\n\\r\\n.location{\\r\\n    padding: 30px 0px;\\r\\n    min-height: 250px;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-around\\r\\n}\\r\\n\\r\\n.loc_text,.map{\\r\\n    width: 50%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center\\r\\n}\\r\\n\\r\\n.pad{\\r\\n    padding-left: 40px;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.half-width{\\r\\n    width: 40%;\\r\\n    padding: 0px 10px;\\r\\n}\\r\\n\\r\\n.full-width{\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\n.head{\\r\\n    font-size: 17px;\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.contact-btn>*{\\r\\n    margin-right: 10px;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.motto{\\r\\n    padding: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 600px){\\r\\n    .pad{\\r\\n        padding: 5px;\\r\\n    }\\r\\n    .location{\\r\\n        flex-direction: column;\\r\\n    }\\r\\n    .loc_text,.map{\\r\\n        width: 100%;\\r\\n    }\\r\\n    .flex{\\r\\n        flex-direction: column;\\r\\n    }\\r\\n    .card{\\r\\n        width: 100%;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!chapter\\\" color=\\\"accent\\\"></mat-progress-bar>\\r\\n<mat-tab-group color=\\\"primary\\\" *ngIf=\\\"chapter\\\">\\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>\\r\\n        <mat-icon class=\\\"example-tab-icon\\\">local_library</mat-icon>\\r\\n        About\\r\\n      </ng-template>\\r\\n      <div class=\\\"profile-top\\\" >\\r\\n      </div>\\r\\n        <div class=\\\"profile-header\\\">\\r\\n          <div class=\\\"profile-img\\\"><img src=\\\"../../assets/images/alberto.png\\\" height=\\\"150px\\\" width=\\\"150px\\\"></div>\\r\\n          <div class=\\\"profile-head\\\"><h4 style=\\\"color:white\\\">{{chapter.userId.name}}</h4><h4>{{chapter.domain}}</h4></div>\\r\\n        </div>\\r\\n      <div>\\r\\n        <div>\\r\\n        <hr>\\r\\n        <div class=\\\"flex\\\">\\r\\n            <div class=\\\"history\\\">\\r\\n              <h2>Our History</h2>\\r\\n              <p>{{chapter.userId.description}}</p>\\r\\n            </div>\\r\\n          <div class=\\\"card\\\">\\r\\n            <mat-card>\\r\\n              <mat-card-header>\\r\\n                <mat-card-title>\\r\\n                <h3>Facts At a Glance</h3>\\r\\n                </mat-card-title>\\r\\n              </mat-card-header>\\r\\n              <mat-card-content style=\\\"padding: 10px\\\">\\r\\n                <dl>\\r\\n                  <dt>Started</dt>\\r\\n                  <dd>3 Feb. 2013</dd>\\r\\n                  <dt>Major Stake Holder</dt>\\r\\n                  <dd>HK Fine Foods Inc.</dd>\\r\\n                  <dt>Last Year's Turnover</dt>\\r\\n                  <dd>$1,250,375</dd>\\r\\n                  <dt>Employees</dt>\\r\\n                  <dd>40</dd>\\r\\n                </dl>\\r\\n              </mat-card-content>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n        \\r\\n      <div>\\r\\n        <mat-card class=\\\"motto\\\">\\r\\n          <!-- <blockquote> -->\\r\\n            <h4>You better cut the pizza in four pieces because\\r\\n                I'm not hungry enough to eat six.</h4>\\r\\n            <footer>-- Yogi Berra,\\r\\n              <cite>The Wit and Wisdom of Yogi Berra,\\r\\n                P. Pepe, Diversion Books, 2014</cite>\\r\\n            </footer>\\r\\n          <!-- </blockquote> -->\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div class=\\\"leaders\\\">\\r\\n          <h3>Board Members</h3>\\r\\n          <mat-list>\\r\\n              <mat-list-item >\\r\\n                      <img matListAvatar src=\\\"../../assets/images/alberto.png\\\" alt=\\\"fgsd\\\">\\r\\n                      <h3 matLine>Lorem Ipsum</h3>\\r\\n                      <p matLine>\\r\\n                        <span>Lorem Dolor MAtis ipsum Lorem Dolor MAtis ipsum Lorem Dolor MAtis ipsum</span> \\r\\n                      </p>\\r\\n                      <p matLine>\\r\\n                          <span> Lorem Dolor MAtis ipsum </span>\\r\\n                      </p>\\r\\n              </mat-list-item>\\r\\n              <mat-list-item >\\r\\n                  <img matListAvatar src=\\\"../../assets/images/alberto.png\\\" alt=\\\"fgsd\\\">\\r\\n                  <h3 matLine>Lorem Ipsum</h3>\\r\\n                  <p matLine>\\r\\n                    <span>Lorem Dolor MAtis ipsum Lorem Dolor MAtis ipsum Lorem Dolor MAtis ipsum</span> \\r\\n                  </p>\\r\\n                  <p matLine>\\r\\n                      <span> Lorem Dolor MAtis ipsum </span>\\r\\n                  </p>\\r\\n              </mat-list-item>\\r\\n          </mat-list>  \\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n  \\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>\\r\\n        <mat-icon class=\\\"example-tab-icon\\\">school</mat-icon>\\r\\n        Events\\r\\n      </ng-template>\\r\\n      <p class=\\\"head\\\" *ngIf=\\\"upcomingEvents\\\">\\r\\n        Upcoming Events\\r\\n        <mat-icon  matBadge=\\\"{{upcomingEvents.length}}\\\" matBadgeColor=\\\"accent\\\">school</mat-icon>\\r\\n      </p>\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel *ngFor=\\\"let event of upcomingEvents\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              {{event.eventName}}\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Conducted By {{event.organiser}}\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <p>Event Description</p>\\r\\n          <p>{{event.description}}</p>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/user/event', event._id]\\\" *ngIf=\\\"userbool\\\">Vie Details</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/chapter/event', event._id]\\\" *ngIf=\\\"orgbool\\\">View Details</button>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n      <p class=\\\"head\\\" *ngIf=\\\"pastEvents\\\">\\r\\n        Past Events\\r\\n        <mat-icon matBadge=\\\"{{pastEvents.length}}\\\" matBadgeColor=\\\"accent\\\">school</mat-icon>\\r\\n      </p>\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel *ngFor=\\\"let event of pastEvents\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              {{event.eventName}}\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Conducted By {{event.organiser}}\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <p>Event Description</p>\\r\\n          <p>{{event.description}}</p>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/user/event', event._id]\\\" *ngIf=\\\"userbool\\\">Vie Details</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/chapter/event', event._id]\\\" *ngIf=\\\"orgbool\\\">View Details</button>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n\\r\\n    </mat-tab>\\r\\n  \\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>\\r\\n        <mat-icon class=\\\"example-tab-icon\\\">message</mat-icon>\\r\\n        Contact\\r\\n      </ng-template>\\r\\n  \\r\\n  <div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <div>\\r\\n    <div class=\\\"location\\\">\\r\\n      <div class=\\\"loc_text pad\\\">\\r\\n        <h4>Our Address</h4>\\r\\n        <address>\\r\\n          <p>{{chapter.userId.name}}</p>\\r\\n          <p>VIT University</p>\\r\\n          <p>Vellore</p><br>\\r\\n          <i class=\\\"fa fa-fax\\\"></i>: +{{chapter.userId.phone}}<br>\\r\\n          <i class=\\\"fa fa-envelope\\\"></i>: \\r\\n          <a href=\\\"{{chapter.userId.email}}}\\\">{{chapter.userId.email}}</a>\\r\\n        </address>\\r\\n        <p></p>\\r\\n        <div class=\\\"contact-btn\\\">\\r\\n          <a mat-stroked-button color=\\\"accent\\\" href=\\\"tel:+{{chapter.userId.phone}}\\\"><i class=\\\"fa fa-phone\\\"></i> Call</a>\\r\\n          <a mat-stroked-button color=\\\"accent\\\" href=\\\"mailto:chapter.userId.email\\\"><i class=\\\"fa fa-envelope-o\\\"></i> Email</a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"map\\\"> \\r\\n          <iframe src=\\\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d7775.936449711567!2d79.15989618518067!3d12.973884160513077!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bad479f0ccbe067%3A0xfef222e5f36ecdeb!2sVellore+Institute+of+Technology!5e0!3m2!1sen!2sin!4v1538511589452\\\" width=\\\"100%\\\" height=\\\"100%\\\" frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-size\\\">\\r\\n      <h3>Send us your Feedback</h3>\\r\\n      <p>{{ feedbackForm.value | json }} {{ feedbackForm.status | json }}</p>\\r\\n  \\r\\n      <form novalidate *ngIf='!y' [formGroup]=\\\"feedbackForm\\\" #fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <!-- <p>\\r\\n          <mat-form-field class=\\\"half-width\\\" >\\r\\n            <input matInput formControlName=\\\"firstname\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\"  required>\\r\\n            <mat-error *ngIf=\\\"formErrors.firstname\\\">{{formErrors.firstname}}</mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"lastname\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n            <mat-error *ngIf=\\\"formErrors.lastname\\\">{{formErrors.lastname}}</mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"telnum\\\" placeholder=\\\"Tel. Number\\\" type=\\\"tel\\\" pattern=\\\"[0-9]*\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n            <mat-error *ngIf=\\\"formErrors.telnum\\\">{{formErrors.telnum}}</mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"half-width\\\">\\r\\n            <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" email [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n            <mat-error *ngIf=\\\"formErrors.email\\\">{{formErrors.email}}</mat-error>\\r\\n          </mat-form-field>\\r\\n        </p> -->\\r\\n        <table class=\\\"form-size\\\">\\r\\n          <td>\\r\\n            <mat-slide-toggle (click)=\\\"contactUs()\\\">May we contact you?</mat-slide-toggle>\\r\\n          </td>\\r\\n          <td *ngIf=\\\"contact\\\">\\r\\n    \\r\\n            <mat-select  placeholder=\\\"How?\\\" formControlName=\\\"contactMethod\\\">\\r\\n              <mat-option *ngFor=\\\"let ctype of contactType\\\" [value]=\\\"ctype\\\">\\r\\n                {{ ctype }}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </td>\\r\\n          </table>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <textarea matInput formControlName=\\\"message\\\" placeholder=\\\"Your Feedback\\\" rows=12></textarea>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"feedbackForm.invalid\\\" mat-button class=\\\"background-primary text-floral-white\\\">Submit</button>\\r\\n      </form>\\r\\n      <!-- <div *ngIf=\\\"!res&&y\\\">\\r\\n        <h3>Submitting Form</h3>\\r\\n        <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"res&&y\\\">\\r\\n        <h2>YOUR SUBMISSION</h2>\\r\\n        <p>Firstname:{{res.firstname}}</p>\\r\\n        <p>Lastname:{{res.lastname}}</p>\\r\\n        <p>Tel. Number:{{res.telnum}}</p>\\r\\n        <p>Email:{{res.email}}</p>\\r\\n        <p>Contact You?:{{res.agree}}</p>\\r\\n        <p>How?:{{res.contacttype}}</p>\\r\\n        <p>Feedback:{{res.message}}</p>\\r\\n      </div> -->\\r\\n    </div>\\r\\n    </div>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n  <div *ngIf=\\\"chapter\\\" style=\\\"display:flex;justify-content:center\\\">\\r\\n    <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"goBack()\\\">BACK</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <!-- <mat-accordion>\\r\\n          <mat-expansion-panel *ngFor=\\\"let event of upcomingEvents\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                {{event.eventName}}\\r\\n              </mat-panel-title>\\r\\n              <mat-panel-description>\\r\\n                Conducted By {{event.organiser}}\\r\\n              </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n            <p>Event Description</p>\\r\\n            <p>{{event.description}}</p>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/user/event', event._id]\\\" *ngIf=\\\"userbool\\\">Vie Details</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/chapter/event', event._id]\\\" *ngIf=\\\"orgbool\\\">View Details</button>\\r\\n          </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n      <h4>Past Events</h4>\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel *ngFor=\\\"let event of pastEvents\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              {{event.eventName}}\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Conducted By {{event.organiser}}\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <p>Event Description</p>\\r\\n          <p>{{event.description}}</p>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/user/event', event._id]\\\" *ngIf=\\\"userbool\\\">Vie Details</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/chapter/event', event._id]\\\" *ngIf=\\\"orgbool\\\">View Details</button>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion> -->\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { EventdetailService } from '../services/eventdetail.service';\r\nimport { ChaptersService } from '../services/chapters.service';\r\nimport { Params, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FeedbackService } from '../services/feedback.service';\r\nimport { ContactType } from '../shared/contact';\r\nimport { Location } from '@angular/common';\r\nimport { Restangular } from 'ngx-restangular';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-chapterdetails',\r\n  templateUrl: './chapterdetails.component.html',\r\n  styleUrls: ['./chapterdetails.component.css']\r\n})\r\nexport class ChapterdetailsComponent implements OnInit {\r\n\r\n  @ViewChild('fform') feedbackFormDirective;\r\n  feedbackForm: FormGroup;\r\n  feedback: any;\r\n  contactType = ContactType;\r\n  res: any;\r\n  y:number = 0;\r\n  show:number = 0;\r\n  \r\n  formErrors = {\r\n    'firstname': '',\r\n    'lastname': '',\r\n    'telnum': '',\r\n    'message': ''\r\n  };\r\n\r\n  validationMessages = {\r\n    'firstname': {\r\n      'required':      'First Name is required.',\r\n      'minlength':     'First Name must be at least 2 characters long.',\r\n      'maxlength':     'FirstName cannot be more than 25 characters long.'\r\n    },\r\n    'lastname': {\r\n      'required':      'Last Name is required.',\r\n      'minlength':     'Last Name must be at least 2 characters long.',\r\n      'maxlength':     'Last Name cannot be more than 25 characters long.'\r\n    },\r\n    'telnum': {\r\n      'required':      'Tel. number is required.',\r\n      'pattern':       'Tel. number must contain only numbers.'\r\n    },\r\n    'message': {\r\n      'required':      'Message is required.'\r\n    },\r\n  };\r\n\r\n\r\n\r\n\r\n  constructor(private eventdetailservice: EventdetailService,private route: ActivatedRoute,private fb: FormBuilder, private feedbackservice: FeedbackService,private location: Location, private chapterservice: ChaptersService,private restangular: Restangular,public snackBar: MatSnackBar) { \r\n    this.createForm();\r\n  }\r\n\r\n  createForm(){\r\n    this.feedbackForm = this.fb.group({\r\n      // firstname: ['', [Validators.required,Validators.minLength(2),Validators.maxLength(25)]],\r\n      // lastname: ['', [Validators.required,Validators.minLength(2),Validators.maxLength(25)]],\r\n      // telnum: ['', [Validators.required,Validators.pattern]],\r\n      // email: ['', [Validators.required,Validators.email]],\r\n      // agree: false,\r\n      contactMethod: 'None',\r\n      message: ['', [Validators.required]]\r\n    });\r\n\r\n    this.feedbackForm.valueChanges.subscribe(data => this.onValueChanged(data));\r\n    this.onValueChanged();\r\n  }\r\n\r\n\r\n  onValueChanged(data?: any) {\r\n    if (!this.feedbackForm) { return; }\r\n    const form = this.feedbackForm;\r\n    for (const field in this.formErrors) {\r\n      if (this.formErrors.hasOwnProperty(field)) {\r\n        // clear previous error message (if any)\r\n        this.formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.formErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const id = this.route.snapshot.params['id'];\r\n    this.feedback = this.feedbackForm.value;\r\n    console.log(this.feedback);\r\n    this.restangular.all('api/common/organization/'+id+'/feedback').post(this.feedback).subscribe((data) => {\r\n      console.log(data);\r\n      this.openSnackBar(\"Feedback Sent\", ':)')\r\n    });\r\n    this.feedbackFormDirective.resetForm(); \r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n  chapter: any;\r\n  upcomingEvents: any;\r\n  pastEvents: any;\r\n  orgbool: any = false;\r\n  userbool: any = false;\r\n  contact: any = false;\r\n\r\n  contactUs(){\r\n    if(this.contact == true){\r\n      this.contact = false\r\n      this.feedbackForm.patchValue({contactMethod:'None'})\r\n    }\r\n    else{\r\n      this.contact = true\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    console.log(\"lol\");\r\n    const id = this.route.snapshot.params['id'];\r\n    this.chapterservice.getChapterById(id).subscribe((data) => {\r\n      this.chapter = data.organization;\r\n      console.log(this.chapter);\r\n\r\n      this.restangular.one(\"api/all/role\").get().subscribe((data) => {\r\n        console.log(data);\r\n        if(data.role == 'organization'){\r\n          this.orgbool = true;\r\n          console.log(\"haha\");\r\n          console.log(this.userbool)\r\n        }\r\n        else{\r\n          this.userbool = true;\r\n        }\r\n      })\r\n\r\n      this.eventdetailservice.getEventsByChapter(id).subscribe(events => \r\n        {\r\n          console.log(events)\r\n          this.upcomingEvents = events.upcomingEvents;\r\n          this.upcomingEvents.length = this.upcomingEvents.length\r\n          this.pastEvents = events.conductedEvents;\r\n          this.pastEvents.length = this.pastEvents.length;\r\n          console.log(this.upcomingEvents);\r\n          console.log(this.pastEvents)\r\n        });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-panel-description{\\r\\n    justify-content: flex-end\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!events\\\" color=\\\"accent\\\"></mat-progress-bar>\\n<mat-accordion>\\n    <mat-expansion-panel *ngFor=\\\"let event of events\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{event.eventName}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          Conducted By {{event.organiser}}\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <p>Event Description</p>\\n      <p>{{event.description}}</p>\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/chapter/event', event._id]\\\">View Details</button>\\n    </mat-expansion-panel>\\n  </mat-accordion>\"","import { Component, OnInit } from '@angular/core';\nimport { EventdetailService } from '../services/eventdetail.service'\nimport { Restangular } from 'ngx-restangular';\n\n@Component({\n  selector: 'app-chaptereventsch',\n  templateUrl: './chaptereventsch.component.html',\n  styleUrls: ['./chaptereventsch.component.css']\n})\nexport class ChaptereventschComponent implements OnInit {\n\n  events: any[];\n  url: any;\n  bool: any;\n\n  constructor(private eventdetailservice: EventdetailService, private restangular: Restangular) { }\n\n  ngOnInit() {\n    this.eventdetailservice.getEvents().subscribe(events => {this.events = events.events;console.log(this.events)});\n\n  }\n}\n","module.exports = \"mat-card {\\r\\n    margin: 20px 0px;\\r\\n}\\r\\n\\r\\n.header-image {\\r\\n    background-image: url('chapter.png');\\r\\n    background-size: cover;\\r\\n  }\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!chapters\\\" color=\\\"accent\\\"></mat-progress-bar>\\n<mat-card *ngFor=\\\"let chapter of chapters\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"header-image\\\"></div>\\n    <mat-card-title>{{chapter.userId.name}}</mat-card-title>\\n    <mat-card-subtitle>{{chapter.domain}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <p>\\n      {{chapter.userId.description}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button [routerLink]=\\\"['/chapter/chapters', chapter.userId._id]\\\">View Profile</button>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { Comment } from '../shared/comment';\nimport { ChaptersService } from '../services/chapters.service'\n\n@Component({\n  selector: 'app-chapters-view-ch',\n  templateUrl: './chapters-view-ch.component.html',\n  styleUrls: ['./chapters-view-ch.component.css']\n})\nexport class ChaptersViewChComponent implements OnInit {\n\n  constructor(private chapterservice:ChaptersService) { }\n\n\n  chapters:any\n\n  ngOnInit() {\n    \n    this.chapterservice.getChapters().subscribe((data) => {this.chapters=data.chapters;console.log(this.chapters)})\n  }\n\n}\n","module.exports = \"mat-card {\\r\\n    margin: 20px 0px;\\r\\n}\\r\\n\\r\\n.header-image {\\r\\n    background-image: url('chapter.png');\\r\\n    background-size: cover;\\r\\n  }\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!chapters\\\" color=\\\"accent\\\"></mat-progress-bar>\\r\\n<mat-card *ngFor=\\\"let chapter of chapters\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar class=\\\"header-image\\\"></div>\\r\\n    <mat-card-title>{{chapter.userId.name}}</mat-card-title>\\r\\n    <mat-card-subtitle>{{chapter.domain}}</mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <p>\\r\\n      {{chapter.userId.description}}\\r\\n    </p>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-button [routerLink]=\\\"['/user/chapter', chapter.userId._id]\\\">View Profile</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Comment } from '../shared/comment'\r\nimport { ChaptersService } from '../services/chapters.service'\r\n\r\n\r\n@Component({\r\n  selector: 'app-chapters-view',\r\n  templateUrl: './chapters-view.component.html',\r\n  styleUrls: ['./chapters-view.component.css']\r\n})\r\nexport class ChaptersViewComponent implements OnInit {\r\n\r\n  constructor(private chapterservice:ChaptersService) { }\r\n  chapters:any\r\n\r\n\r\n  ngOnInit() {\r\n    this.chapterservice.getChapters().subscribe((data) => {this.chapters=data.chapters;console.log(this.chapters)})\r\n  }\r\n\r\n}\r\n","module.exports = \".event-form{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    padding: 30px;\\r\\n}\\r\\n\\r\\n.full-width{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.eventForm{\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\n.lol{\\r\\n    display: block;\\r\\n    width: 60%;\\r\\n    margin: 10px auto\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 600px) {\\r\\n    .event-form{\\r\\n        padding: 10px;\\r\\n    }\\r\\n\\r\\n    .eventForm{\\r\\n        width: 100%;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<mat-tab-group>\\n    <mat-tab label=\\\"New Event\\\">\\n\\n        <!-- <p>{{ eventForm.value | json }} {{ eventForm.status | json }}</p> -->\\n\\n      <div class=\\\"event-form\\\">\\n        <form class=\\\"eventForm\\\" novalidate [formGroup]=\\\"eventForm\\\" #eventform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <p>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput formControlName=\\\"eventName\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" required [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error *ngIf=\\\"formErrors.eventName\\\">{{formErrors.eventName}}</mat-error>\\n              </mat-form-field>\\n            </p>\\n            <p>\\n                <mat-form-field class=\\\"full-width\\\">\\n                    <input matInput formControlName=\\\"tagLine\\\" placeholder=\\\"Tagline\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                    <mat-error *ngIf=\\\"formErrors.tagLine\\\">{{formErrors.tagLine}}</mat-error>\\n                </mat-form-field>\\n              </p>\\n              <p>\\n                  <mat-select placeholder=\\\"Category\\\" formControlName=\\\"category\\\">\\n                      <mat-option *ngFor=\\\"let ctype of type\\\" [value]=\\\"ctype\\\">\\n                        {{ ctype }}\\n                      </mat-option>\\n                    </mat-select>\\n              </p>\\n              <p>\\n                  <mat-form-field class=\\\"full-width\\\">\\n                    <input matInput formControlName=\\\"organiser\\\" placeholder=\\\"Organiser\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                    <mat-error *ngIf=\\\"formErrors.organiser\\\">{{formErrors.organiser}}</mat-error>\\n                  </mat-form-field>\\n                </p>\\n                <p>\\n                    <mat-form-field class=\\\"full-width\\\">\\n                      <input matInput formControlName=\\\"price\\\" placeholder=\\\"Price\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                      <mat-error *ngIf=\\\"formErrors.price\\\">{{formErrors.price}}</mat-error>\\n                    </mat-form-field>\\n                  </p> \\n                  <p>\\n                      <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput formControlName=\\\"venue\\\" placeholder=\\\"Venue\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                        <mat-error *ngIf=\\\"formErrors.venue\\\">{{formErrors.venue}}</mat-error>\\n                      </mat-form-field>\\n                    </p>\\n                    <p>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                          <input matInput formControlName=\\\"eventDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                          <mat-datepicker #picker></mat-datepicker>\\n                        </mat-form-field>\\n                    </p>\\n                    <p>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                          <input matInput formControlName=\\\"eventTime\\\" placeholder=\\\"Time\\\" type=\\\"time\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                          <mat-error *ngIf=\\\"formErrors.eventTime\\\">{{formErrors.eventTime}}</mat-error>\\n                        </mat-form-field>\\n                      </p>\\n                      <p>\\n                          <mat-form-field class=\\\"full-width\\\">\\n                            <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Event Description\\\" rows=12></textarea>\\n                            <mat-error *ngIf=\\\"formErrors.description\\\">{{formErrors.description}}</mat-error>\\n                          </mat-form-field>\\n                        </p>\\n            <button type=\\\"submit\\\" [disabled]=\\\"eventForm.invalid\\\" mat-button class=\\\"background-primary text-floral-white\\\">Submit</button>\\n          </form>\\n          <mat-progress-bar class=\\\"lol\\\" *ngIf=\\\"successUpload\\\" mode=\\\"buffer\\\"></mat-progress-bar>\\n      </div>\\n\\n    </mat-tab>\\n    <mat-tab label=\\\"New Feed\\\"> \\n        <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!eventfeed\\\" color=\\\"accent\\\"></mat-progress-bar>\\n        <!-- <p>{{ loginForm.value | json }} {{ loginForm.status | json }}</p> -->\\n        <div class=\\\"event-form\\\">\\n        <form class=\\\"eventForm\\\" novalidate [formGroup]=\\\"loginForm\\\" #lform=\\\"ngForm\\\" (ngSubmit)=\\\"onFeedSubmit()\\\">\\n            <p>\\n                <mat-select placeholder=\\\"Events\\\" formControlName=\\\"eventId\\\" required>\\n                    <mat-option *ngFor=\\\"let ctype of eventfeed\\\" [value]=\\\"ctype._id\\\">\\n                      {{ ctype.eventName }}\\n                    </mat-option>\\n                  </mat-select>\\n                  <mat-error *ngIf=\\\"formErrorsfeed.event_id\\\">{{formErrorsfeed.event_id}}</mat-error>\\n            </p>\\n            <p>\\n              <mat-form-field class=\\\"input-align\\\">\\n                <input matInput formControlName=\\\"name\\\" placeholder=\\\"Feed Name\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                <mat-error *ngIf=\\\"formErrorsfeed.name\\\">{{formErrorsfeed.name}}</mat-error>\\n              </mat-form-field>\\n            </p>\\n            <p>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <textarea matInput formControlName=\\\"description\\\" placeholder=\\\"Description for feed\\\" rows=12></textarea>\\n                  <mat-error *ngIf=\\\"formErrorsfeed.description\\\">{{formErrorsfeed.description}}</mat-error>\\n                </mat-form-field>\\n            </p>\\n            <!-- <p>\\n                    <input formControlName=\\\"file\\\" (change)=\\\"onFileChanged($event)\\\" placeholder=\\\"Password\\\" type=\\\"file\\\" required>\\n            </p>  -->\\n             <p>\\n              <button type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" mat-button class=\\\"background-primary text-floral-white align\\\">Submit</button>\\n            </p>\\n            <br>\\n            <mat-progress-bar class=\\\"lol\\\" *ngIf=\\\"successUpload\\\" mode=\\\"buffer\\\"></mat-progress-bar>\\n            </form>\\n            </div>\\n     </mat-tab>\\n</mat-tab-group>\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ChaptersService } from '../services/chapters.service'\n\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\n\nimport { NeweventService } from '../services/newevent.service';\nimport { EventdetailService } from '../services/eventdetail.service';\nimport { Restangular } from 'ngx-restangular';\nimport {MatSnackBar} from '@angular/material';\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-create-event',\n  templateUrl: './create-event.component.html',\n  styleUrls: ['./create-event.component.css']\n})\nexport class CreateEventComponent implements OnInit {\n\n\n\n  @ViewChild('lform') feedFormDirective;\n  loginForm: FormGroup;\n  newFeed: any;\n  events: any[];\n  formErrorsfeed = {\n    'description': '',\n    'eventId': '',\n    'image':'',\n    'name':''\n  };\n  validationMessagesfeed = {\n    description:{\n      minlength:'Email must be at least 4 characters long.',\n      maxlength:'Cannot be more than 150 words',\n      required:'Description is required.'\n    },\n    eventId:{\n      required:'Event is required.'\n    },\n    image:{\n      required: 'Image is required'\n    },\n    name:{\n      required: 'Feed name is required'\n    }\n  };\n\n\n  //Another one\n\n  @ViewChild('eventform') feedbackFormDirective;\n  eventForm: FormGroup;\n  event: any;\n  eventfeed: any;\n  type: any[] = ['Technical','Non-Technical','NGO','Gaming']\n  \n  formErrors = {\n    'eventName': '',\n    'tagLine': '',\n    'description': '',\n    'category': '',\n    'organiser': '',\n    'price': '',\n    'eventDate': '',\n    'eventTime': '',\n    'venue': ''\n  };\n\n  validationMessages = {\n    eventName: {\n      minlength:'Email must be at least 4 characters long.',\n      required:'Email is required.'\n    },\n    tagLine: {\n      required:      'Tag line is required.',\n      minlength:     'Tag line must be at least 2 characters long.',\n      maxlength:     'Last Name cannot be more than 45 characters long.'\n    },\n    description: {\n      required:      'Description is required.',\n      minlength:     'Description must be at least 20 characters long.',\n      maxlength:     'FirstName cannot be more than 150 characters long.'\n    },\n    organiser: {\n      required:      'Organiser is required.'\n    },\n    price: {\n      required:      'Price is required.'\n    },\n    eventDate: {\n      'required':      'Date is required.'\n    },\n    eventTime: {\n      required:      'Time is required.'\n    },\n    venue: {\n      required:      'Venue is required.'\n    }\n  };\n\n\n\n\n  constructor(private fb: FormBuilder, private neweventservice: NeweventService, private chapterservice: ChaptersService, private eventdetailservice: EventdetailService, private restangular: Restangular, public snackBar: MatSnackBar) {\n    this.createEventForm();\n    this.createFeedForm();\n   }\n\n\n   openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n\n  createEventForm(){\n    this.eventForm = this.fb.group({\n      eventName: ['', [Validators.required,Validators.minLength(2),Validators.maxLength(25)]],\n      tagLine: ['', [Validators.required,Validators.minLength(2),Validators.maxLength(45)]],\n      description: ['', [Validators.required,Validators.minLength(20),Validators.maxLength(150)]],\n      organiser: ['', [Validators.required]],\n      price: ['', [Validators.required]],\n      eventDate: ['', [Validators.required]],\n      eventTime: ['', [Validators.required]],\n      venue: ['', [Validators.required]],\n      category: 'Technical'\n    });\n\n    this.eventForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n\n  \n  createFeedForm(){\n    this.loginForm = this.fb.group({\n      name: ['', [Validators.required]],\n      eventId: ['', [Validators.required]],\n      description: ['', [Validators.required,Validators.minLength(4)]],\n      // file: ['', Validators.required]\n    });\n\n    this.loginForm.valueChanges.subscribe(data => this.onValueChangedfeed(data));\n    this.onValueChangedfeed();\n   }\n\n\n  onValueChanged(data?: any) {\n    if (!this.eventForm) { return; }\n    const form = this.eventForm;\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        // clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n\n  onValueChangedfeed(data?: any) {\n    if (!this.loginForm) { return; }\n    const form = this.loginForm;\n    for (const field in this.formErrorsfeed) {\n      if (this.formErrorsfeed.hasOwnProperty(field)) {\n        // clear previous error message (if any)\n        this.formErrorsfeed[field] = '';\n        const control = form.get(field);\n        if (control && (control.dirty || !control.valid)) {\n          const messages = this.validationMessagesfeed[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrorsfeed[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // selectedFile: File;\n\n  // onFileChanged(event) {\n  //   this.selectedFile = event.target.files[0];\n  //   console.log(this.selectedFile)\n  // }\n\n  successUpload: any = false;\n  onSubmit() {\n    this.successUpload = true\n    this.event = this.eventForm.value;\n    this.eventForm.reset();\n    this.feedbackFormDirective.resetForm();\n    console.log(this.event);\n    this.neweventservice.submitEvent(this.event).subscribe((data) => {\n      console.log(data);\n      this.successUpload = false;\n      this.openSnackBar(\"Event Created\", \";)\")\n    });\n  }\n  \n\n  onFeedSubmit() {\n    this.successUpload = true\n    const date: Date = new Date();\n    this.newFeed = this.loginForm.value;\n    this.newFeed.date = date.toISOString();\n    console.log(this.newFeed)\n    this.loginForm.reset();\n    this.feedFormDirective.resetForm();\n    this.restangular.all('api/posts/write-post').post(this.newFeed).subscribe((data) => {\n      console.log(data);\n      this.successUpload = false;\n      this.openSnackBar(\"Feed Created\", \";)\")\n    })\n  }\n\n  profile: any;\n  upcomingEvent: any;\n  ngOnInit() {\n    this.chapterservice.getChapterProfile().subscribe((data) => {\n      this.profile = data.organization;\n      console.log(this.profile);\n      const id = this.profile.userId._id;\n      console.log(id)\n      this.eventdetailservice.getEventsByChapter(id).subscribe((data) =>{\n        this.upcomingEvent = data.upcomingEvents;\n        this.eventfeed = this.upcomingEvent;\n        console.log(this.eventfeed);\n      })\n    })\n  }\n\n  matcher = new MyErrorStateMatcher();\n\n}\n","module.exports = \"*{\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.detail_desc{\\r\\n    display: flex;\\r\\n    justify-content: space-around;\\r\\n    width: 90%;\\r\\n}\\r\\n\\r\\n.col{\\r\\n    width: 40%;\\r\\n    display: flex;\\r\\n    align-items: center\\r\\n}\\r\\n\\r\\n.flex-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n\\r\\n.comment-form {\\r\\n    display: flex;\\r\\n    justify-content: flex-start;\\r\\n    flex-direction: row;\\r\\n  }\\r\\n\\r\\np{\\r\\n    padding: 10px 20px;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 600px){\\r\\n      .detail_desc{\\r\\n          flex-direction: column;\\r\\n          width: 100%;\\r\\n      }\\r\\n      .col{\\r\\n          width: 100%;\\r\\n          padding: 10px 0px;\\r\\n      }\\r\\n      .comment-form{\\r\\n          flex-direction: column;\\r\\n      }\\r\\n\\r\\n      p>*{\\r\\n          width: 80%;\\r\\n      }\\r\\n      p>mat-slider {\\r\\n          width: 60%;\\r\\n      }\\r\\n  }\\r\\n\\r\\n\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!event\\\" color=\\\"accent\\\"></mat-progress-bar>\\r\\n<div *ngIf=\\\"event\\\">\\r\\n  <h3>{{event.event_name}}</h3>\\r\\n  <h4><span>Conducted By: {{event.organiser}}</span><br><span>Type: {{event.category}}</span></h4>\\r\\n  <div class=\\\"detail_desc\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <img src=\\\"../../assets/images/jumble.png\\\" width=\\\"100%\\\" style=\\\"display:block\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n        <p>{{event.description}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<mat-list fxFlex *ngIf=\\\"event\\\">\\r\\n  <h4>Comments</h4>\\r\\n    <mat-list-item *ngFor=\\\"let com of event.comments\\\">\\r\\n      <h1 matLine> {{com.comment}} </h1>\\r\\n      <p matLine>\\r\\n       <span> {{com.rating}} </span>\\r\\n      </p>\\r\\n      <p matLine>\\r\\n        <span>--{{com.author}} {{com.date | date}} </span>\\r\\n       </p>\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n  <mat-list fxFlex *ngIf=\\\"commentForm.valid\\\">\\r\\n      <mat-list-item>\\r\\n        <h1 matLine> {{commentForm.get('comment').value}} </h1>\\r\\n        <p matLine>\\r\\n         <span> {{commentForm.get('rating').value}} </span>\\r\\n        </p>\\r\\n        <!-- <p matLine>\\r\\n          <span>--{{commentForm.get('author').value}}</span>\\r\\n         </p> -->\\r\\n      </mat-list-item>\\r\\n  </mat-list>\\r\\n\\r\\n<h6 *ngIf=\\\"bool && role && event\\\">Your Comment</h6>\\r\\n<form *ngIf=\\\"bool && role && event\\\" novalidate [formGroup]=\\\"commentForm\\\" #cform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <!-- <p>{{ commentForm.value | json }}</p> -->\\r\\n  <div class=\\\"comment-form\\\">\\r\\n    <!-- <p>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"author\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n        <mat-error *ngIf=\\\"formErrors.author\\\">{{formErrors.author}}</mat-error>\\r\\n      </mat-form-field>\\r\\n    </p> -->\\r\\n    <p>\\r\\n      <span>Rating</span>\\r\\n      <mat-slider formControlName=\\\"rating\\\" step=\\\"1\\\" tickInterval=\\\"1\\\" thumbLabel tickInterval=\\\"1\\\" min=\\\"1\\\" max=\\\"5\\\" step=\\\"1\\\" value=\\\"5\\\"></mat-slider>\\r\\n    </p>\\r\\n    <p>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"comment\\\" placeholder=\\\"Your Comment\\\" rows=12 [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n        <mat-error *ngIf=\\\"formErrors.comment\\\">{{formErrors.comment}}</mat-error>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n  </div>\\r\\n  <button type=\\\"submit\\\" [disabled]=\\\"commentForm.invalid\\\" mat-button class=\\\"background-primary text-floral-white\\\">Submit</button>\\r\\n</form>\\r\\n<div *ngIf=\\\"event\\\" style=\\\"display:flex;justify-content:center\\\">\\r\\n  <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"goBack()\\\">BACK</button>\\r\\n</div>\"","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\r\nimport { EventdetailService } from '../services/eventdetail.service'\r\n\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Comment } from '../shared/comment'\r\n\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\r\n\r\nimport { Params, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { Restangular } from 'ngx-restangular';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-event-detail',\r\n  templateUrl: './event-detail.component.html',\r\n  styleUrls: ['./event-detail.component.css']\r\n})\r\nexport class EventDetailComponent implements OnInit {\r\n\r\n    @ViewChild('cform') feedbackFormDirective;\r\n    \r\n    event: any;\r\n\r\n    commentForm: FormGroup;\r\n    newcomment: Comment;\r\n    formErrors = {\r\n      'author': '',\r\n      'comment': ''\r\n    };\r\n    validationMessages = {\r\n      author:{\r\n        minlength:'Name must be at least 2 characters long.',\r\n        required:'Name is required.'\r\n      },\r\n      comment:{\r\n        required:'Comment is required.'\r\n      }\r\n    };  \r\n\r\n\r\n  constructor(private fb: FormBuilder, private eventdetailservice: EventdetailService,private route: ActivatedRoute,private location: Location, private restangular: Restangular) {\r\n    this.createForm();\r\n   }\r\n   createForm(){\r\n    this.commentForm = this.fb.group({\r\n      rating: [5],\r\n      comment: ['', [Validators.required]],\r\n      author: ['  ', [Validators.required,Validators.minLength(2)]]\r\n    });\r\n\r\n    this.commentForm.valueChanges.subscribe(data => this.onValueChanged(data));\r\n    this.onValueChanged();\r\n  }\r\n\r\n  onValueChanged(data?: any) {\r\n    if (!this.commentForm) { return; }\r\n    const form = this.commentForm;\r\n    for (const field in this.formErrors) {\r\n      if (this.formErrors.hasOwnProperty(field)) {\r\n        // clear previous error message (if any)\r\n        this.formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && (control.dirty || !control.valid)) {\r\n          const messages = this.validationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.formErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  role: any = false;\r\n  bool: any = true;\r\n  id: any;\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    console.log(this.id);\r\n    // this.eventdetailservice.getEventbyId(id).subscribe(event => {this.event = event.events;console.log(event.events)});\r\n    this.eventdetailservice.getEventbyId(this.id).subscribe(event => {this.event = event.event;console.log(this.event)});\r\n\r\n    console.log(\"called\")\r\n    this.restangular.one(\"api/all/role\").get().subscribe((data) => {\r\n      console.log(data);\r\n      this.role = true\r\n      if(data.role == 'organization'){\r\n        this.bool = false;\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  onSubmit(){\r\n    this.newcomment = this.commentForm.value;\r\n    const date: Date = new Date();\r\n    this.newcomment.date = date.toISOString();\r\n    console.log(this.newcomment)\r\n    this.restangular.all('api/events/'+this.id+'/comment').post(this.newcomment).subscribe((res) => {\r\n      console.log(res);\r\n      this.commentForm.reset();\r\n      this.feedbackFormDirective.resetForm({rating:5,author:'',comment:''});\r\n      this.event.comments.push(this.newcomment);\r\n    });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n}","module.exports = \".card-holder{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    flex-direction: column;\\r\\n    width: 80%;\\r\\n    margin: 0px auto\\r\\n}\\r\\n.card{\\r\\n    display: block;\\r\\n    width: 90%;\\r\\n    margin: 10px auto\\r\\n}\\r\\n@media screen and (max-width: 600px){\\r\\n    .card-holder{\\r\\n        width: 95%;\\r\\n        margin: 0px;\\r\\n    }\\r\\n    .mat-button{\\r\\n        padding: 0px;\\r\\n    }\\r\\n    .card{\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!events\\\" coloe=\\\"accent\\\"></mat-progress-bar>\\r\\n<div class=\\\"card-holder\\\" *ngIf=\\\"events\\\">\\r\\n      <mat-card class=\\\"card\\\" *ngFor=\\\"let event of events.posts;let i = index\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-list>\\r\\n                <mat-list-item>\\r\\n                        <img matListAvatar src=\\\"/assets/images/alberto.png\\\">\\r\\n                        <h3 matLine> {{event.name | uppercase}}</h3>\\r\\n                        <p matLine>\\r\\n                            <span>{{event.owner}}</span>\\r\\n                        </p>\\r\\n                </mat-list-item>\\r\\n            </mat-list> \\r\\n          </mat-card-header>\\r\\n          <img class=\\\"card\\\" mat-card avatar src=\\\"/assets/images/jumble.png\\\" alt={{event.name}} height=\\\"400px\\\">\\r\\n          <mat-card-content>\\r\\n            <h3>\\r\\n              {{event.event}}\\r\\n            </h3>\\r\\n            <p>\\r\\n              {{event.description}}\\r\\n            </p>\\r\\n          </mat-card-content>\\r\\n\\r\\n          <mat-card-actions>\\r\\n            <button mat-icon-button color=\\\"primary\\\" *ngIf=\\\"event.liked\\\" (click)=\\\"liked(event._id,i)\\\">\\r\\n                <mat-icon matBadgeOverlap=\\\"false\\\"  matBadge=\\\"{{event.likes.length}}\\\" matBadgeColor=\\\"primary\\\">thumb_up_alt</mat-icon>\\r\\n            </button>\\r\\n            \\r\\n            <button mat-icon-button *ngIf=\\\"!event.liked\\\" (click)=\\\"liked(event._id,i)\\\">\\r\\n                <mat-icon matBadgeOverlap=\\\"false\\\" matBadgeColor=\\\"warn\\\" matBadge=\\\"{{event.likes.length}}\\\">thumb_up_alt</mat-icon >\\r\\n            </button>\\r\\n            <button mat-button *ngIf=\\\"event.liked\\\" (click)=\\\"liked(event._id,i)\\\">LIKED</button>\\r\\n            <button mat-button *ngIf=\\\"!event.liked\\\" (click)=\\\"liked(event._id,i)\\\">LIKE</button >\\r\\n            <button mat-button [routerLink]=\\\"['/user/event', event.eventId]\\\">More Details</button>\\r\\n            <button mat-button *ngIf=\\\"bool\\\" (click)=\\\"register(event.eventId)\\\">Register</button>\\r\\n            <span class=\\\"flex-spacer\\\"></span>\\r\\n          </mat-card-actions>\\r\\n        </mat-card>\\r\\n</div>    \\r\\n\\r\\n\\r\\n<!-- <div class=\\\"card-holder\\\">\\r\\n    <mat-card class=\\\"card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-list>\\r\\n              <mat-list-item>\\r\\n                      <img matListAvatar src=\\\"/assets/images/alberto.png\\\">\\r\\n                      <h3 matLine> Name</h3>\\r\\n                      <p matLine>\\r\\n                          <span> hsdbjadbcaj</span>\\r\\n                      </p>\\r\\n              </mat-list-item>\\r\\n          </mat-list> \\r\\n        </mat-card-header>\\r\\n        <img class=\\\"card\\\" mat-card avatar src=\\\"/assets/images/jumble.png\\\"  height=\\\"400px\\\">\\r\\n        <mat-card-content>\\r\\n          <h3>\\r\\n            fgosdfnvlkn     \\r\\n          </h3>\\r\\n          <p>\\r\\n            zksjdvnjansdvjk\\r\\n          </p>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n          <button mat-button (click)=\\\"likeFeed()\\\">LIKE</button>\\r\\n          <button mat-button [routerLink]=\\\"['/user/event', 1]\\\">More Details</button>\\r\\n          <button mat-button>Register</button>\\r\\n          <span class=\\\"flex-spacer\\\"></span>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n</div>     -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { Event } from '../shared/event';\r\nimport { FeedService } from '../services/feed.service';\r\nimport { Restangular } from 'ngx-restangular';\r\nimport { EventdetailService } from'../services/eventdetail.service';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-feed',\r\n  templateUrl: './feed.component.html',\r\n  styleUrls: ['./feed.component.css']\r\n})\r\nexport class FeedComponent implements OnInit {\r\n\r\n  events: any;\r\n  constructor(private feedservice: FeedService,private restangular:Restangular, private eventdetailservice: EventdetailService,public snackBar: MatSnackBar) { }\r\n\r\n  bool: any = true;\r\n  ngOnInit() {\r\n    this.feedservice.getFeed().subscribe((result) => \r\n    {\r\n      this.events = result;\r\n      console.log(this.events.posts);\r\n    });\r\n\r\n    this.restangular.one(\"api/all/role\").get().subscribe((data) => {\r\n      console.log(data);\r\n      if(data.role == 'organization'){\r\n        this.bool = false;\r\n        console.log(\"haha\");\r\n        console.log(this.bool)\r\n      }\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  liked(id:any,index:any){\r\n    console.log(id);\r\n    var response = {\r\n      postId: id\r\n    }\r\n    console.log(response);\r\n    this.restangular.all(\"/api/posts/like-post\").post(response).subscribe((data) => {\r\n      console.log(data)\r\n      if(data.success == true){\r\n        this.events.posts[index].liked = data.liked;\r\n        if(data.liked == true){\r\n          this.events.posts[index].likes.push('lol');\r\n        }\r\n        if(data.liked == false){\r\n          this.events.posts[index].likes.pop();\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  register(id:any){\r\n    console.log(id);\r\n    this.restangular.all(\"api/events/\"+id+\"/register\").post().subscribe((data) => {\r\n      console.log(data)\r\n      var action = \":)\"\r\n      this.openSnackBar(data.message, action)\r\n    },errorResponse => {\r\n      console.log(\"Error with status code\", errorResponse);    \r\n      this.openSnackBar(errorResponse.data.message, ': |')\r\n    })\r\n  }\r\n\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>\\n  Sign in\\n</h1>\\n\\n\\n<button (click)=\\\"socialSignIn('google')\\\">Sign in with Google</button>\\n\\n<!-- <script src=\\\"https://apis.google.com/js/platform.js\\\" async defer></script>\\n\\n<meta name=\\\"google-signin-client_id\\\" content=\\\"968010074702-m26te1bg5lpvqq802d5vh8231f7aisrq.apps.googleusercontent.com\\\">\\n\\n<div class=\\\"g-signin2\\\" data-onsuccess=\\\"onSignIn\\\"></div>\\n\\n<div onclick=\\\"onSignIn()\\\"> sdn</div>\\n\\n<script>\\n\\nfunction onSignIn(googleUser) {\\n  console.log()\\n  var profile = googleUser.getBasicProfile();\\n  console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\\n  console.log('Name: ' + profile.getName());\\n  console.log('Image URL: ' + profile.getImageUrl());\\n  console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\\n}\\n\\n</script> -->\"","import { Component, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  FacebookLoginProvider,\n  GoogleLoginProvider\n} from 'angular-6-social-login';\n\n@Component({\n  selector: 'app-google-auth',\n  templateUrl: './google-auth.component.html',\n  styleUrls: ['./google-auth.component.css']\n})\nexport class GoogleAuthComponent implements OnInit {\n\n  ngOnInit() {\n  }\n\n  constructor( private socialAuthService: AuthService ) {}\n  \n  public socialSignIn(socialPlatform : string) {\n    console.log(\"haha\");\n    let socialPlatformProvider;\n\n      socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n    \n    this.socialAuthService.signIn(socialPlatformProvider).then(\n      (userData) => {\n        console.log(socialPlatform+\" sign in data : \" , userData);\n      }\n    );\n  }\n\n\n\n\n\n}\n","module.exports = \"*{\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.login{\\r\\n    background: url('form_bg.png');\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n    height: 100vh;\\r\\n    width: 100vw;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center\\r\\n}\\r\\n\\r\\n.form{\\r\\n    background-color:white;\\r\\n    padding: 20px;\\r\\n    opacity: 1;\\r\\n    border-radius: 15px\\r\\n}\\r\\n\\r\\np > *{\\r\\n    width: 100%\\r\\n}\\r\\n\\r\\n.align{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n::-moz-selection{\\r\\n    background: white !important\\r\\n}\\r\\n\\r\\n::selection{\\r\\n    background: white !important\\r\\n}\\r\\n\\r\\n.reg{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.reg:hover{\\r\\n    text-decoration: underline;\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"login\\\">\\r\\n  <div class=\\\"form\\\">\\r\\n      <h3 class=\\\"align\\\"><span>Login</span></h3>\\r\\n      <form class=\\\"form\\\" novalidate [formGroup]=\\\"loginForm\\\" #lform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"input-align\\\">\\r\\n              <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n              <mat-error *ngIf=\\\"formErrors.email\\\">{{formErrors.email}}</mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <mat-form-field class=\\\"input-align\\\">\\r\\n              <input matInput formControlName=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n              <mat-error *ngIf=\\\"formErrors.password\\\">{{formErrors.password}}</mat-error>\\r\\n            </mat-form-field>\\r\\n          </p>\\r\\n          <p>\\r\\n            <button type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" mat-button class=\\\"background-primary text-floral-white align\\\">Submit</button>\\r\\n          </p>\\r\\n          </form>\\r\\n          <mat-progress-bar *ngIf=\\\"submit\\\" mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-bar>\\r\\n          <p *ngIf=\\\"invalid\\\" class=\\\"reg\\\">User doesn't exist</p>\\r\\n          <p class=\\\"reg\\\" routerLink=\\\"/register\\\"><a>Register</a></p>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { Restangular } from 'ngx-restangular';\r\n\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  @ViewChild('lform') feedbackFormDirective;\r\n  loginForm: FormGroup;\r\n  loginData: any;\r\n  formErrors = {\r\n    'email': '',\r\n    'password': ''\r\n  };\r\n  validationMessages = {\r\n    email:{\r\n      minlength:'Email must be at least 4 characters long.',\r\n      required:'Email is required.'\r\n    },\r\n    password:{\r\n      minlength:'Password must be at least 4 characters long.',\r\n      required:'Password is required.'\r\n    }\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, private router: Router,private restangular:Restangular) {\r\n    this.createForm();\r\n   }\r\n\r\n   createForm(){\r\n    this.loginForm = this.fb.group({\r\n      password: ['', [Validators.required,Validators.minLength(4)]],\r\n      email: ['', [Validators.required,Validators.minLength(4)]]\r\n    });\r\n\r\n    this.loginForm.valueChanges.subscribe(data => this.onValueChanged(data));\r\n    this.onValueChanged();\r\n   }\r\n\r\n   onValueChanged(data?: any) {\r\n    if (!this.loginForm) { return; }\r\n    const form = this.loginForm;\r\n    for (const field in this.formErrors) {\r\n      if (this.formErrors.hasOwnProperty(field)) {\r\n        // clear previous error message (if any)\r\n        this.formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && (control.dirty || !control.valid)) {\r\n          const messages = this.validationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.formErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit:any = false;\r\n  invalid: any = false;\r\n  onSubmit() {\r\n    this.submit=true;\r\n    this.loginData = this.loginForm.value;\r\n    console.log(this.loginData)\r\n    this.restangular.all('api/auth/login').post(this.loginData).subscribe(data =>{\r\n      console.log(\"SUccessssss\");\r\n      console.log(data.user);\r\n      if(data.user.role == 'student'){\r\n        this.router.navigate(['/', 'user']);\r\n      }\r\n      else if(data.user.role == 'organization'){\r\n        this.router.navigate(['/', 'chapter']);\r\n      }\r\n      this.submit = false;\r\n\r\n      \r\n    }, errorResponse => {\r\n      console.log(\"Error with status code\", errorResponse.status);\r\n      this.submit=false;\r\n      this.invalid = true\r\n    });\r\n    this.loginForm.reset();\r\n    this.feedbackFormDirective.resetForm();    \r\n  }\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n}\r\n","module.exports = \".main{\\r\\n    padding: 20px;\\r\\n}\\r\\n.active{\\r\\n    background-color: #07acc2;\\r\\n    color: white!important\\r\\n}\"","module.exports = \"<div class=\\\"demo-layout mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header\\\" style=\\\"height:100vh\\\">\\n  <header class=\\\"demo-header mdl-layout__header mdl-color--grey-100 mdl-color-text--grey-600\\\">\\n    <div aria-expanded=\\\"false\\\" role=\\\"button\\\" tabindex=\\\"0\\\" class=\\\"mdl-layout__drawer-button\\\"><i class=\\\"material-icons\\\"></i></div>\\n    <div class=\\\"mdl-layout__header-row\\\">\\n      <span class=\\\"mdl-layout-title\\\">{{page}}</span>\\n      <div class=\\\"mdl-layout-spacer\\\"></div>\\n      <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--expandable\\\">\\n        <label class=\\\"mdl-button mdl-js-button mdl-button--icon\\\" for=\\\"search\\\">\\n          <i class=\\\"material-icons\\\">search</i>\\n        </label>\\n        <div class=\\\"mdl-textfield__expandable-holder\\\">\\n          <input class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"search\\\">\\n          <label class=\\\"mdl-textfield__label\\\" for=\\\"search\\\">Enter your query...</label>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n  <div class=\\\"demo-drawer mdl-layout__drawer mdl-color--blue-grey-900 mdl-color-text--blue-grey-50\\\">\\n    <header class=\\\"demo-drawer-header\\\">\\n      <img src=\\\"../../assets/images/org.png\\\" class=\\\"demo-avatar\\\">\\n      <div class=\\\"demo-avatar-dropdown\\\">\\n        <span>hello@{{name}}</span>\\n      </div>\\n    </header>\\n    <nav class=\\\"demo-navigation mdl-navigation mdl-color--blue-grey-800\\\">\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/chapter/feed\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Feed')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">inbox</i>Feed</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/chapter/profile\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Profile')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">home</i>Profile</a>\\n      <!-- <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">delete</i>Trash</a> -->\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/chapter/newEvent\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Add Event')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">add_circle</i>Add Event</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/chapter/attendance\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Attendance')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">school</i>Attendance</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/chapter/events\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Events')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">flag</i>Events</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/chapter/chapters\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Chapters')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">forum</i>Chapters</a>\\n    </nav>\\n  </div>\\n  <main class=\\\"mdl-layout__content mdl-color--grey-100 main\\\">\\n    <router-outlet></router-outlet>\\n  </main>\\n</div>\\n\\n<script src=\\\"https://code.getmdl.io/1.3.0/material.min.js\\\"></script>\"","import { Component, OnInit } from '@angular/core';\nimport { ChaptersService } from '../services/chapters.service';\n\n@Component({\n  selector: 'app-main-view-chapter',\n  templateUrl: './main-view-chapter.component.html',\n  styleUrls: ['./main-view-chapter.component.css']\n})\nexport class MainViewChapterComponent implements OnInit {\n\n  page:String = \"Feed\";\n  profile:any;\n  name:String;\n\n  constructor( private chapterservice:ChaptersService) { }\n\n  ngOnInit() {\n    this.chapterservice.getChapterProfile().subscribe(profile => {\n      this.profile=profile;\n      console.log(this.profile.organization)\n      this.name = this.profile.organization.userId.name;\n    });\n  }\n  \n\n  head(e){\n    this.page = e;\n  }\n\n}\n","module.exports = \".main{\\r\\n    padding: 20px;\\r\\n}\\r\\n.active{\\r\\n    background-color: #07acc2;\\r\\n    color: white!important\\r\\n}\"","module.exports = \"<div class=\\\"demo-layout mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header\\\" style=\\\"height:100vh\\\">\\r\\n    <header class=\\\"demo-header mdl-layout__header mdl-color--grey-100 mdl-color-text--grey-600\\\">\\r\\n      <div aria-expanded=\\\"false\\\" role=\\\"button\\\" tabindex=\\\"0\\\" class=\\\"mdl-layout__drawer-button\\\"><i class=\\\"material-icons\\\"></i></div>\\r\\n      <div class=\\\"mdl-layout__header-row\\\">\\r\\n        <span class=\\\"mdl-layout-title\\\">{{page}}</span>\\r\\n        <div class=\\\"mdl-layout-spacer\\\"></div>\\r\\n        <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--expandable\\\">\\r\\n          <label class=\\\"mdl-button mdl-js-button mdl-button--icon\\\" for=\\\"search\\\">\\r\\n            <i class=\\\"material-icons\\\">search</i>\\r\\n          </label>\\r\\n          <div class=\\\"mdl-textfield__expandable-holder\\\">\\r\\n            <input class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"search\\\">\\r\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"search\\\">Enter your query...</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </header>\\r\\n    <div class=\\\"demo-drawer mdl-layout__drawer mdl-color--blue-grey-900 mdl-color-text--blue-grey-50\\\">\\r\\n      <header class=\\\"demo-drawer-header\\\">\\r\\n        <img src=\\\"../../assets/images/profile.png\\\" class=\\\"demo-avatar\\\">\\r\\n        <div class=\\\"demo-avatar-dropdown\\\">\\r\\n          <span>hello@{{name}}</span>\\r\\n        </div>\\r\\n      </header>\\r\\n      <nav class=\\\"demo-navigation mdl-navigation mdl-color--blue-grey-800\\\">\\r\\n        <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/user/feed\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Feed')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">inbox</i>Feed</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/user/profile\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Profile')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">home</i>Profile</a>\\r\\n        <!-- <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">delete</i>Trash</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" href=\\\"#\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">report</i>Spam</a> -->\\r\\n        <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/user/events\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Events')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">flag</i>Events</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/user/chapters\\\" routerLinkActive=\\\"active\\\" (click)=\\\"head('Chapters')\\\"><i class=\\\"mdl-color-text--blue-grey-400 material-icons\\\" role=\\\"presentation\\\">forum</i>Chapters</a>\\r\\n      </nav>\\r\\n    </div>\\r\\n    <main class=\\\"mdl-layout__content mdl-color--grey-100 main\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </main>\\r\\n  </div>\\r\\n  <script src=\\\"https://code.getmdl.io/1.3.0/material.min.js\\\"></script>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProfileService } from '../services/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-main-view',\r\n  templateUrl: './main-view.component.html',\r\n  styleUrls: ['./main-view.component.css']\r\n})\r\nexport class MainViewComponent implements OnInit {\r\n\r\n  page:String = \"Feed\";\r\n  profile:any;\r\n  name:String;\r\n  chapter: any;\r\n  student: boolean;\r\n\r\n  constructor( private profileservice:ProfileService) { }\r\n\r\n  ngOnInit() {\r\n    this.profileservice.getProfile().subscribe(profile => {\r\n      this.profile=profile;\r\n      console.log(this.profile.user)\r\n      this.name = this.profile.user.userId.name;\r\n      // if(this.profile.user.role == \"Student\"){\r\n      //   console.log(\"csd\")\r\n      //   this.student=false;\r\n      //   console.log(this.student)\r\n      //   this.chapter=false;\r\n      // }\r\n      // if(this.profile.user.role == \"Chapter\"){\r\n      //   console.log(\"dnfcj\")\r\n      //   this.chapter=true;\r\n      //   this.student=false;\r\n      // }\r\n    });\r\n  }\r\n  \r\n\r\n  head(e){\r\n    this.page = e;\r\n  }\r\n\r\n}\r\n","module.exports = \"*{\\r\\n    margin: 0px;\\r\\n}\\r\\n.step{\\r\\n    width: 60%;\\r\\n    border-radius: 20px;\\r\\n    position: relative;\\r\\n}\\r\\n.bg{\\r\\n    background: url('form_bg.png');\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n    height: 80vh;\\r\\n    padding: 150px 0px;\\r\\n    position: -webkit-sticky;\\r\\n    position: sticky;\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n}\\r\\n.login{  \\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    margin-top: 20px\\r\\n}\\r\\n.form{\\r\\n    background-color:white;\\r\\n    padding: 20px;\\r\\n    opacity: 1;\\r\\n    width: 95%;\\r\\n    border-radius: 15px\\r\\n}\\r\\np{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center\\r\\n}\\r\\np > *{\\r\\n    width: 80%;\\r\\n    margin: auto;\\r\\n}\\r\\n.align{\\r\\n    text-align: center;\\r\\n}\\r\\n::-moz-selection{\\r\\n    background: white !important\\r\\n}\\r\\n::selection{\\r\\n    background: white !important\\r\\n}\\r\\n.button{\\r\\n    text-align: center;\\r\\n    margin: 10px\\r\\n}\\r\\nbutton{\\r\\n    margin: 5px 10px\\r\\n}\\r\\nfieldset{\\r\\n    border: 1px solid #5e445f;\\r\\n    border-radius: 10px;\\r\\n}\\r\\nlegend{\\r\\n    font-size: 20px;\\r\\n\\r\\n}\\r\\n.log{\\r\\n    display: block;\\r\\n    margin: 10px auto;\\r\\n    text-align: center;\\r\\n}\\r\\n@media screen and (max-width: 600px){\\r\\n    .step{\\r\\n        width: 90%\\r\\n    }\\r\\n}\"","module.exports = \"<div class=\\\"bg\\\">\\n<!-- <div class=\\\"layout\\\">  -->\\n    <mat-horizontal-stepper class=\\\"step\\\" [linear]=\\\"isLinear\\\" #stepper>\\n        <mat-step>\\n            <ng-template matStepLabel>Select your role:</ng-template>\\n            <div class=\\\"button\\\">\\n                <button type=\\\"button\\\" mat-stroked-button color=\\\"accent\\\" (click)=\\\"buildForm('student')\\\">Student</button>\\n                <button type=\\\"button\\\" mat-stroked-button color=\\\"accent\\\" (click)=\\\"buildForm('organisation')\\\">Organisation</button>\\n                <button type=\\\"button\\\" mat-stroked-button color=\\\"accent\\\" (click)=\\\"buildForm('faculty')\\\">Faculty</button>\\n              </div>\\n              <button type=\\\"button\\\" mat-stroked-button color=\\\"primary\\\" matStepperNext>Next</button>\\n        </mat-step>\\n        <mat-step>\\n            <ng-template matStepLabel>Fill the details:</ng-template>\\n            <div class=\\\"login\\\">\\n                <div *ngIf=\\\"created\\\" class=\\\"form\\\">\\n                  <form novalidate [formGroup]=\\\"registerForm\\\" #lform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <fieldset>\\n                      <legend> {{formType}} Registration Form </legend>\\n                      <p>\\n                        <mat-form-field class=\\\"input-align\\\">\\n                          <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                          <mat-error *ngIf=\\\"formErrors.name\\\">{{formErrors.name}}</mat-error>\\n                        </mat-form-field>\\n                      </p>\\n                      <p>\\n                          <mat-form-field class=\\\"input-align\\\" *ngIf=\\\"stud\\\">\\n                            <input matInput formControlName=\\\"email\\\" placeholder=\\\"VIT Email\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required pattern=\\\"[a-zA-Z0-9.]+@vitstudent.ac.in\\\">\\n                            <mat-error *ngIf=\\\"formErrors.email\\\">{{formErrors.email}}</mat-error>\\n                          </mat-form-field>\\n                        </p>\\n                        <p>\\n                          <mat-form-field class=\\\"input-align\\\" *ngIf=\\\"!stud\\\">\\n                            <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required >\\n                            <mat-error *ngIf=\\\"formErrors.email\\\">{{formErrors.email}}</mat-error>\\n                          </mat-form-field>\\n                        </p>\\n                      <p>\\n                        <mat-form-field class=\\\"input-align\\\">\\n                          <input matInput formControlName=\\\"username\\\" placeholder=\\\"Username\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                          <mat-error *ngIf=\\\"formErrors.username\\\">{{formErrors.username}}</mat-error>\\n                        </mat-form-field>\\n                      </p>\\n                      <p>\\n                          <mat-form-field class=\\\"input-align\\\">\\n                            <input matInput formControlName=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                            <mat-error *ngIf=\\\"formErrors.password\\\">{{formErrors.password}}</mat-error>\\n                          </mat-form-field>\\n                        </p>   \\n                      <p>\\n                        <mat-form-field class=\\\"input-align\\\">\\n                          <input matInput formControlName=\\\"description\\\" placeholder=\\\"Description\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                          <mat-error *ngIf=\\\"formErrors.description\\\">{{formErrors.description}}</mat-error>\\n                        </mat-form-field>\\n                      </p>\\n                      <p>\\n                          <mat-form-field class=\\\"input-align\\\">\\n                            <input matInput formControlName=\\\"phone\\\" placeholder=\\\"Phone Number\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                            <mat-error *ngIf=\\\"formErrors.phone\\\">{{formErrors.phone}}</mat-error>\\n                          </mat-form-field>\\n                        </p>\\n            \\n                      <!-- Student Specififc -->\\n                      <div *ngIf=\\\"stud\\\">\\n                        <p>\\n                          <mat-form-field class=\\\"input-align\\\">\\n                            <input matInput formControlName=\\\"gender\\\" placeholder=\\\"Gender\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                            <mat-error *ngIf=\\\"formErrors.gender\\\">{{formErrors.gender}}</mat-error>\\n                          </mat-form-field>\\n                        </p>\\n                        <p>\\n                          <mat-form-field class=\\\"input-align\\\">\\n                            <input matInput formControlName=\\\"regNo\\\" placeholder=\\\"Registration Number\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                            <mat-error *ngIf=\\\"formErrors.gender\\\">{{formErrors.gender}}</mat-error>\\n                          </mat-form-field>\\n                        </p>\\n                        <p>\\n                            <mat-form-field class=\\\"input-align\\\">\\n                              <input matInput placeholder=\\\"Skill\\\" type=\\\"text\\\" (blur)=\\\"onKey($event)\\\">\\n                            </mat-form-field>\\n                            <span>\\n                            <button style=\\\"display: inline;\\\" type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addSkill()\\\">\\n                                <mat-icon >add</mat-icon>\\n                                Click to add skill.\\n                            </button>\\n                          </span>\\n                          </p>\\n                      </div> \\n                      <!-- organisation Specific -->\\n                      <div *ngIf=\\\"chapter\\\">\\n                          <p>\\n                              <mat-form-field class=\\\"input-align\\\">\\n                                <input matInput formControlName=\\\"domain\\\" placeholder=\\\"Domain\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                                <mat-error *ngIf=\\\"formErrors.domain\\\">{{formErrors.domain}}</mat-error>\\n                              </mat-form-field>\\n                            </p>\\n                            <p>\\n                                <mat-form-field class=\\\"input-align\\\">\\n                                  <input matInput formControlName=\\\"moto\\\" placeholder=\\\"Motto\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                                  <mat-error *ngIf=\\\"formErrors.moto\\\">{{formErrors.moto}}</mat-error>\\n                                </mat-form-field>\\n                              </p>\\n                      </div>\\n            \\n                      <!-- Faculty specific -->\\n                      <div *ngIf=\\\"facul\\\">\\n                          <p>\\n                              <mat-form-field class=\\\"input-align\\\">\\n                                <input matInput formControlName=\\\"school\\\" placeholder=\\\"School\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                                <mat-error *ngIf=\\\"formErrors.school\\\">{{formErrors.school}}</mat-error>\\n                              </mat-form-field>\\n                            </p>\\n                            <p>\\n                                <mat-form-field class=\\\"input-align\\\">\\n                                  <input matInput formControlName=\\\"gender\\\" placeholder=\\\"Gender\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                                  <mat-error *ngIf=\\\"formErrors.gender\\\">{{formErrors.gender}}</mat-error>\\n                                </mat-form-field>\\n                              </p>\\n                      </div>\\n                      <button class=\\\"log\\\" type=\\\"button\\\" mat-stroked-button color=\\\"accent\\\" *ngIf=\\\"!google\\\" (click)=\\\"socialSignIn('google')\\\" [disabled]=\\\"registerForm.invalid\\\">Verify VIT ID</button>\\n                      \\n                      <button class=\\\"log\\\" mat-button matStepperNext type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\"  class=\\\"background-primary text-floral-white align\\\" *ngIf=\\\"google\\\">Submit</button>\\n                      <button class=\\\"log\\\" mat-button matStepperNext type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\"  class=\\\"background-primary text-floral-white align\\\" *ngIf=\\\"!stud\\\">Submit</button>                      \\n                    </fieldset>\\n                  </form>\\n                  <p *ngIf=\\\"error && !google\\\">Not a valid VIT ID</p>\\n                      <!-- <p>{{ registerForm.value | json }}</p> -->\\n                </div>\\n              </div>\\n              <button type=\\\"button\\\" mat-stroked-button color=\\\"primary\\\" matStepperPrevious>Back</button>\\n        </mat-step>\\n        <mat-step>\\n          <ng-template matStepLabel>Done</ng-template>\\n          <mat-progress-bar *ngIf=\\\"!try\\\" mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-bar>\\n          <p *ngIf=\\\"register && try\\\">You are successfully registered.</p>\\n          <p *ngIf=\\\"!register && try\\\">Registration Failed</p>\\n          <div>\\n            <button *ngIf=\\\"register && try\\\" mat-stroked-button color=\\\"primary\\\" routerLink=\\\"/login\\\" (click)=\\\"stepper.reset()\\\">Login</button>\\n            <button *ngIf=\\\"!register && try\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"stepper.reset()\\\">Retry</button>\\n          </div>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n    <!-- </div> -->\\n</div>\\n\\n<!-- \\n  <div>\\n    <div class=\\\"button\\\">\\n      <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"buildForm('student')\\\">Student</button>\\n      <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"buildForm('organisation')\\\">Organisation</button>\\n      <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"buildForm('faculty')\\\">Faculty</button>\\n    </div>\\n  </div>\\n  <div class=\\\"login\\\">\\n    <div *ngIf=\\\"created\\\" class=\\\"form\\\">\\n      <form novalidate [formGroup]=\\\"registerForm\\\" #lform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <fieldset>\\n          <legend> {{formType}} Registration Form </legend>\\n          <p>\\n            <mat-form-field class=\\\"input-align\\\">\\n              <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n              <mat-error *ngIf=\\\"formErrors.name\\\">{{formErrors.name}}</mat-error>\\n            </mat-form-field>\\n          </p>\\n          <p>\\n              <mat-form-field class=\\\"input-align\\\">\\n                <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                <mat-error *ngIf=\\\"formErrors.email\\\">{{formErrors.email}}</mat-error>\\n              </mat-form-field>\\n            </p>\\n          <p>\\n            <mat-form-field class=\\\"input-align\\\">\\n              <input matInput formControlName=\\\"username\\\" placeholder=\\\"Username\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n              <mat-error *ngIf=\\\"formErrors.username\\\">{{formErrors.username}}</mat-error>\\n            </mat-form-field>\\n          </p>\\n          <p>\\n              <mat-form-field class=\\\"input-align\\\">\\n                <input matInput formControlName=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                <mat-error *ngIf=\\\"formErrors.password\\\">{{formErrors.password}}</mat-error>\\n              </mat-form-field>\\n            </p>   \\n          <p>\\n            <mat-form-field class=\\\"input-align\\\">\\n              <input matInput formControlName=\\\"description\\\" placeholder=\\\"Description\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n              <mat-error *ngIf=\\\"formErrors.description\\\">{{formErrors.description}}</mat-error>\\n            </mat-form-field>\\n          </p>\\n          <p>\\n              <mat-form-field class=\\\"input-align\\\">\\n                <input matInput formControlName=\\\"phone\\\" placeholder=\\\"Phone Number\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                <mat-error *ngIf=\\\"formErrors.phone\\\">{{formErrors.phone}}</mat-error>\\n              </mat-form-field>\\n            </p>\\n\\n          \\n          <div *ngIf=\\\"stud\\\">\\n            <p>\\n              <mat-form-field class=\\\"input-align\\\">\\n                <input matInput formControlName=\\\"gender\\\" placeholder=\\\"Gender\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                <mat-error *ngIf=\\\"formErrors.gender\\\">{{formErrors.gender}}</mat-error>\\n              </mat-form-field>\\n            </p>\\n            <p>\\n              <mat-form-field class=\\\"input-align\\\">\\n                <input matInput formControlName=\\\"regNo\\\" placeholder=\\\"Registration Number\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                <mat-error *ngIf=\\\"formErrors.gender\\\">{{formErrors.gender}}</mat-error>\\n              </mat-form-field>\\n            </p>\\n          </div> \\n          \\n          <div *ngIf=\\\"chapter\\\">\\n              <p>\\n                  <mat-form-field class=\\\"input-align\\\">\\n                    <input matInput formControlName=\\\"domain\\\" placeholder=\\\"Domain\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                    <mat-error *ngIf=\\\"formErrors.domain\\\">{{formErrors.domain}}</mat-error>\\n                  </mat-form-field>\\n                </p>\\n                <p>\\n                    <mat-form-field class=\\\"input-align\\\">\\n                      <input matInput formControlName=\\\"moto\\\" placeholder=\\\"Motto\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                      <mat-error *ngIf=\\\"formErrors.moto\\\">{{formErrors.moto}}</mat-error>\\n                    </mat-form-field>\\n                  </p>\\n          </div>\\n\\n      \\n          <div *ngIf=\\\"facul\\\">\\n              <p>\\n                  <mat-form-field class=\\\"input-align\\\">\\n                    <input matInput formControlName=\\\"school\\\" placeholder=\\\"School\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                    <mat-error *ngIf=\\\"formErrors.school\\\">{{formErrors.school}}</mat-error>\\n                  </mat-form-field>\\n                </p>\\n                <p>\\n                    <mat-form-field class=\\\"input-align\\\">\\n                      <input matInput formControlName=\\\"gender\\\" placeholder=\\\"Gender\\\" type=\\\"text\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n                      <mat-error *ngIf=\\\"formErrors.gender\\\">{{formErrors.gender}}</mat-error>\\n                    </mat-form-field>\\n                  </p>\\n          </div>\\n\\n\\n          <p>\\n            <button type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\" mat-button class=\\\"background-primary text-floral-white align\\\">Submit</button>\\n          </p>\\n        </fieldset>\\n      </form>\\n\\n\\n          <p>{{ registerForm.value | json }}</p>\\n    </div>\\n  </div> -->\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Restangular } from 'ngx-restangular';\nimport {\n  AuthService,\n  FacebookLoginProvider,\n  GoogleLoginProvider\n} from 'angular-6-social-login';\n\n\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @ViewChild('rform') registerFormDirective;\n  registerForm: FormGroup;\n\n  constructor(private fb: FormBuilder,private restangular: Restangular,private socialAuthService: AuthService) { \n  }\n\n  student: any ={\n    name: ['', [Validators.required,Validators.minLength(4)]],\n    username: ['', [Validators.required]],\n    email: ['', [Validators.required,Validators.pattern]],\n    description: ['', [Validators.required]],\n    password: ['', [Validators.required]],\n    phone: ['', [Validators.required]],\n    photo: [''],\n    role: ['', [Validators.required]],\n    gender: ['', [Validators.required]],\n    regNo: ['', [Validators.required]],\n    skills: [[], [Validators.required]]\n  }\n\n  organisation: any = {\n    name: ['', [Validators.required,Validators.minLength(4)]],\n    username: ['', [Validators.required]],\n    email: ['', [Validators.required]],\n    description: ['', [Validators.required]],\n    password: ['', [Validators.required]],\n    phone: ['', [Validators.required]],\n    photo: [''],\n    role: ['', [Validators.required]], \n    domain: ['', [Validators.required]], \n    moto: ['', [Validators.required]], \n    board: ['']    \n  }\n\n  faculty: any = {\n    name: ['', [Validators.required,Validators.minLength(4)]],\n    username: ['', [Validators.required]],\n    email: ['', [Validators.required]],\n    description: ['', [Validators.required]],\n    password: ['', [Validators.required]],\n    phone: ['', [Validators.required]],\n    photo: [''],\n    role: ['', [Validators.required]],\n    school: ['', [Validators.required]],\n    gender: ['', [Validators.required]]\n  }\n  formErrors = {\n    'name': '',\n    'username': '',\n    'email': '',\n    'description': '',\n    'password': '',\n    'phone': '',\n    'photo': '',\n    'role': '',\n    'school': '',\n    'gender': '',\n    'domain': '',\n    'moto': '',\n    'board': '',\n    'regNo': '',\n    'skills': ''\n  };\n  validationMessages = {\n    name:{\n      minlength:'Email must be at least 4 characters long.',\n      required:'Name is required.'\n    },\n    username:{\n      required:'This field is required.'\n    },\n    email:{\n      required:'This field is required.',\n      pattern:'Not a valid VIT email Id'\n    },\n    description:{\n      required:'This field is required.'\n    },\n    password:{\n      required:'This field is required.'\n    },\n    phone:{\n      required:'This field is required.'\n    },\n    photo:{\n      required:'This field is required.'\n    },\n    role:{\n      required:'This field is required.'\n    },\n    school:{\n      required:'This field is required.'\n    },\n    gender:{\n      required:'This field is required.'\n    },\n    domain:{\n      required:'This field is required.'\n    },\n    moto:{\n      required:'This field is required.'\n    },\n    board:{\n      required:'This field is required.'\n    },\n    regNo:{\n      required:'This field is required.'\n    },\n    skills:{\n      required:'This field is required.'\n    }\n  };\n\n  created: any = false;\n  stud: any = false;\n  chapter: any = false;\n  facul: any = false;\n  formType: any\n\n  buildForm(cat:any){\n    this.created=true\n    if(cat == 'student'){\n      this.formType = \"Student\";\n      this.stud = true;\n      this.facul = false;\n      this.chapter = false;\n      this.registerForm = this.fb.group(this.student);\n      this.registerForm.patchValue({'role':cat})\n      console.log(this.registerForm.value);\n    }\n    if(cat == 'organisation'){\n      cat = \"organization\"\n      this.formType = \"Organisation\"\n      this.chapter = true;\n      this.stud = false;\n      this.facul = false;\n      this.formErrors.email = '',\n      this.registerForm = this.fb.group(this.organisation);\n      this.registerForm.patchValue({'role':cat})\n      console.log(this.registerForm.value);\n    }\n    if(cat == 'faculty'){\n      this.formType = \"Faculty\"\n      this.facul = true;\n      this.stud = false;\n      this.chapter= false;\n      this.formErrors.email = '',\n      this.registerForm = this.fb.group(this.faculty);\n      this.registerForm.patchValue({'role':cat})\n      console.log(this.registerForm.value);\n    }\n    this.registerForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n  skill:any ='';\n  onKey(event: any) { // without type info\n    this.skill = event.target.value;\n    event.target.value = '';\n  }\n  skills: any[]=[];\n  addSkill(){\n    this.skills.push(this.skill);\n    this.skill = '';\n    this.registerForm.patchValue({'skills':this.skills})\n\n  }\n  register: any = false;\n\n  reset(){\n    this.registerForm.reset();\n  }\n\n  try: any = false;\n  onSubmit(){\n    console.log(this.registerForm.value);   \n    this.restangular.all('api/auth/register').post(this.registerForm.value).subscribe((data) => {\n      this.registerForm.reset();\n      this.try = true;\n      if(data.success){\n        this.register = true\n      } \n      console.log(data)\n    },errorResponse => {\n      console.log(\"Error with status code\", errorResponse.message);\n      this.try = true\n    })\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.registerForm) { return; }\n    const form = this.registerForm;\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        // clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && (control.dirty || !control.valid)) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ngOnInit() {\n  }\n  google: any = false\n  error: any = false\n  public socialSignIn(socialPlatform : string) {\n    console.log(\"haha\");\n    let socialPlatformProvider;\n\n    socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n\n    this.socialAuthService.signIn(socialPlatformProvider).then(\n      (userData) => {\n        var formMail = this.registerForm.value.email;\n        console.log(formMail)\n        console.log(userData.email)\n        if(formMail == userData.email){\n          this.google = true\n          console.log(socialPlatform+\" sign in data : \" , userData);\n        } \n        this.error= true\n        this.socialAuthService.signOut().then(()=> console.log(\"lolls\"))\n      }\n    );\n  }\n\n\n\n  matcher = new MyErrorStateMatcher();\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Restangular } from 'ngx-restangular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttendanceService {\n\n  constructor(private restangular:Restangular) { }\n\n  getUsersByevent(id): Observable<any>{\n    return this.restangular.one('api/common/organization/'+id+'/registered-users').get();\n  }\n\n}\n\n\n\n// const x: any[]=[\n//   {\n//     _id:\"one\",\n//     name:\"Mayukh\",\n//     attended: true\n//   },\n//   {\n//     _id:\"two\",\n//     name:\"Anant\",\n//     attended: false\n//   },\n//   {\n//     _id:\"three\",\n//     name:\"Queenie\",\n//     attended: true\n//   },\n//   {\n//     _id:\"four\",\n//     name:\"Kriti\",\n//     attended: true\n//   },\n//   {\n//     _id:\"five\",\n//     name:\"Ankit\",\n//     attended: false\n//   },\n//   {\n//     _id:\"six\",\n//     name:\"Raghu\",\n//     attended: true\n//   },\n//   {\n//     _id:\"seven\",\n//     name:\"Harshit\",\n//     attended: true\n//   }\n// ]\n// // return  of(x);","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Restangular } from 'ngx-restangular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChaptersService {\r\n\r\n  constructor(private restangular: Restangular) { }\r\n\r\n  getChapters(): Observable<any>{\r\n    return this.restangular.one('api/all/chapters').get();\r\n  }\r\n\r\n  getChapterById(id:number): Observable<any>{\r\n    // customGET(\"messages\", {param: \"myParam\"});\r\n    return this.restangular.one('api/common/organization/'+ id).get();\r\n  }\r\n\r\n  getChapterProfile(): Observable<any>{\r\n    return this.restangular.one('api/organization/details').get();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EVENTS } from '../shared/events'\r\nimport { Observable, of } from 'rxjs';\r\nimport { Restangular } from 'ngx-restangular';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventdetailService {\r\n\r\n  constructor(private restangular:Restangular) { }\r\n\r\n  getEventbyId(id:any): Observable<any>{\r\n    // console.log(EVENTS.filter((event) => (event.id === id))[0])\r\n    // return of(EVENTS.filter((event) => (event.id === id))[0]);\r\n    return this.restangular.one('api/events/event-id/'+ id).get();\r\n  }\r\n\r\n  getEvents(): Observable<any>{\r\n    return this.restangular.one('api/all/events').get();;;\r\n  }\r\n\r\n  getEventsByChapter(id:number): Observable<any>{\r\n    return this.restangular.one('api/events/organization-id/'+ id).get()\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EVENTS } from '../shared/events'\r\nimport { Observable, of } from 'rxjs';\r\nimport { Restangular } from 'ngx-restangular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedService {\r\n\r\n  constructor(private restangular:Restangular) { }\r\n\r\n  getFeed(): Observable<any[]>{\r\n        return  this.restangular.one('api/posts/view-post').get();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Restangular } from 'ngx-restangular'\nimport { Observable, of } from 'rxjs';\nimport { FEEDBACK } from '../shared/feedbacks'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  constructor(private restangular:Restangular ) { }\n\n  \n  // submitFeedback(feedback: any): Observable<any>{\n  //   console.log(feedback);\n  //   return of(feedback);\n  // };\n\n  getFeedback(): Observable<any>{\n    return this.restangular.one('/api/organization/get-feedback').get()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EVENTS } from '../shared/events';\nimport { Observable,of } from 'rxjs';\nimport { Restangular } from 'ngx-restangular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NeweventService {\n  constructor(private restangular: Restangular) { }\n\n\n  getEventsWithID(): Observable<any>{\n    const event: any[] = [\n        {\n          event_name:\"Jumble\",\n          _id: '1'\n        },\n        {\n          event_name:\"GPL\",\n          _id: '2'\n        }\n    ]\n    return of(event)\n  }\n\n  submitEvent(data:any): Observable<any>{\n    return this.restangular.all('api/organization/add-event').post(data)\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Profile } from '../shared/profile';\r\nimport { PROFILE } from '../shared/profileSample';\r\nimport { UserEvent } from '../shared/userevent';\r\nimport { EVENTS } from '../shared/events';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Restangular } from 'ngx-restangular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n  constructor(private restangular:Restangular) { }\r\n\r\n  getProfile(): Observable<any> {\r\n    return this.restangular.one('api/student/details').get();\r\n  }\r\n\r\n  getEvents(): Observable<any>{\r\n    return this.restangular.one('api/student/events').get();\r\n  } \r\n\r\n}\r\n","// export const baseURL = 'https://lovely-fox-98.localtunnel.me/';\r\nexport const baseURL = 'http://localhost:3000';","export const ContactType = ['Tel', 'Email'];","import { baseURL } from './baseurl';\r\n\r\n// Function for settting the default restangular configuration\r\nexport function RestangularConfigFactory (RestangularProvider) {\r\n  RestangularProvider.setBaseUrl(baseURL);\r\n  RestangularProvider.setDefaultHttpFields({ withCredentials: true });\r\n}","import {\r\n    SocialLoginModule,\r\n    AuthServiceConfig,\r\n    GoogleLoginProvider,\r\n    FacebookLoginProvider,\r\n} from 'angular-6-social-login';\r\n\r\n\r\nexport function getAuthServiceConfigs() {\r\n    let config = new AuthServiceConfig(\r\n        [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(\"968010074702-m26te1bg5lpvqq802d5vh8231f7aisrq.apps.googleusercontent.com\")\r\n          },\r\n        ]\r\n    );\r\n    return config;\r\n  }","module.exports = \"*{\\r\\n    padding: 0px;\\r\\n    margin: 0px\\r\\n}\\r\\n\\r\\n.profile-top{\\r\\n    background: url('form_bg.png');\\r\\n    width: 100%;\\r\\n    height: 200px;\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat\\r\\n}\\r\\n\\r\\n.profile-header{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    position: relative;\\r\\n    top: -77px\\r\\n}\\r\\n\\r\\n.profile-head{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-left: 50px\\r\\n}\\r\\n\\r\\nh4:nth-child(1){\\r\\n    color: white\\r\\n}\\r\\n\\r\\n.profile-img{\\r\\n    height: 154px;\\r\\n    width: 154px;\\r\\n    margin-right: 50px;\\r\\n    border-radius: 50%;\\r\\n    border:1px solid #484848\\r\\n}\\r\\n\\r\\n.profile-img img{\\r\\n    border-radius: 50%;\\r\\n    border: 2px solid white;\\r\\n}\\r\\n\\r\\n.about-section{\\r\\n    display: flex;\\r\\n    justify-content: space-around;\\r\\n    width: 100%;\\r\\n    border-top: 2px solid #15557e;\\r\\n    border-bottom: 2px solid #15557e\\r\\n}\\r\\n\\r\\n.about{\\r\\n    padding: 10px;\\r\\n    width: 60%;\\r\\n}\\r\\n\\r\\n.interests{\\r\\n    padding: 10px;\\r\\n    width: 30%;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.interests div{\\r\\n    border-left: 2px solid #4d4463;\\r\\n    padding: 0px 30px;\\r\\n}\\r\\n\\r\\nmat-panel-description{\\r\\n    justify-content: flex-end\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 600px){\\r\\n    .profile-head{\\r\\n        margin-left: -10px;\\r\\n    }\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!profile\\\" color=\\\"accent\\\"></mat-progress-bar>\\r\\n<div *ngIf=\\\"profile\\\">\\r\\n<div class=\\\"profile-top\\\">\\r\\n</div>\\r\\n<div class=\\\"profile-header\\\">\\r\\n  <div class=\\\"profile-img\\\"><img src=\\\"../../assets/images/alberto.png\\\" height=\\\"150px\\\" width=\\\"150px\\\"></div>\\r\\n  <div class=\\\"profile-head\\\"><h4>{{profile.userId.name}}</h4><h4>{{profile.userId.role}}</h4></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"about-section\\\">\\r\\n  <div class=\\\"about\\\">\\r\\n    <h5>About</h5>\\r\\n    <p>{{profile.userId.description}}</p>\\r\\n  </div>\\r\\n  <div class=\\\"interests\\\">\\r\\n    <div>\\r\\n      <h5>Skills</h5>\\r\\n      <p *ngFor=\\\"let skill of profile.skills\\\">{{skill}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"upcoming-events\\\" *ngIf=\\\"events\\\">\\r\\n    <mat-tab-group>\\r\\n        <mat-tab label=\\\"Registered Events\\\">\\r\\n            <mat-accordion>\\r\\n                <mat-expansion-panel *ngFor=\\\"let event of upcomingEvent\\\">\\r\\n                  <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                      {{event.eventName}}\\r\\n                    </mat-panel-title>\\r\\n                    <mat-panel-description>\\r\\n                      Conducted By {{event.organiser}}\\r\\n                    </mat-panel-description>\\r\\n                  </mat-expansion-panel-header>\\r\\n                  <p>Event Description</p>\\r\\n                  <p>{{event.description}}</p>\\r\\n                  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/user/event', event._id]\\\">View Details</button>\\r\\n                </mat-expansion-panel>\\r\\n              </mat-accordion>\\r\\n        </mat-tab>\\r\\n\\r\\n\\r\\n        <mat-tab label=\\\"Attended Events\\\">\\r\\n          <mat-accordion>\\r\\n            <mat-expansion-panel *ngFor=\\\"let event of pastEvent\\\">\\r\\n              <mat-expansion-panel-header>\\r\\n                <mat-panel-title>\\r\\n                  {{event.eventName}}\\r\\n                </mat-panel-title>\\r\\n                <mat-panel-description>\\r\\n                  Conducted By {{event.organiser}}\\r\\n                </mat-panel-description>\\r\\n              </mat-expansion-panel-header>\\r\\n              <p>Event Description</p>\\r\\n              <p>{{event.description}}</p>\\r\\n              <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/user/event', event._id]\\\">View Details</button>\\r\\n            </mat-expansion-panel>\\r\\n          </mat-accordion>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProfileService } from '../services/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n\r\n  profile: any;\r\n  pastEvent: any;\r\n  upcomingEvent: any;\r\n  events: any;\r\n\r\n  constructor(private profileservice: ProfileService) { }\r\n\r\n  ngOnInit() {\r\n    this.profileservice.getProfile().subscribe(profile => {\r\n      this.profile=profile.user;\r\n      console.log(this.profile)\r\n    \r\n      this.profileservice.getEvents().subscribe((data) => {\r\n        console.log(data);\r\n        this.events = data;\r\n        this.pastEvent = data.attendedEvents;\r\n        this.upcomingEvent = data.registeredEvents;\r\n        console.log(this.pastEvent);\r\n      });\r\n    \r\n    });\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \"*{\\r\\n    margin: 0;\\r\\n}\\r\\n.attendance{\\r\\n    width: 90%;\\r\\n    display: flex;\\r\\n    margin: auto;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center\\r\\n}\\r\\n.example-card {\\r\\n    max-width: 90%;\\r\\n    margin: auto\\r\\n  }\\r\\n.example-header-image {\\r\\n    background-image: url('chapter.png');\\r\\n    background-size: cover;\\r\\n  }\\r\\n.form{\\r\\n      width: 100%;\\r\\n  }\\r\\n.row{\\r\\n      display: flex;\\r\\n      justify-content: space-between;\\r\\n      padding: 0px 20px;\\r\\n      margin: 10px 0px;\\r\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.15);\\r\\n  }\\r\\n\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>{{event.eventName}}</mat-card-title>\\n    <mat-card-subtitle>Attendance</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-divider></mat-divider>\\n  <mat-card-content>\\n          <p class=\\\"row\\\" *ngFor=\\\"let participant of participants\\\">\\n            <span>{{participant.name}}</span>\\n            <span *ngIf=\\\"participant.attended\\\">Present</span>\\n            <span *ngIf=\\\"!participant.attended\\\">Absent</span>\\n          </p>\\n  </mat-card-content>\\n  <!-- <mat-card-actions>\\n    \\n  </mat-card-actions> -->\\n</mat-card>\\n<div style=\\\"display:flex;justify-content:center\\\">\\n  <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"goBack()\\\">BACK</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { AttendanceService } from '../services/attendance.service';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { EventdetailService } from '../services/eventdetail.service'\n\n@Component({\n  selector: 'app-view-attendance',\n  templateUrl: './view-attendance.component.html',\n  styleUrls: ['./view-attendance.component.css']\n})\nexport class ViewAttendanceComponent implements OnInit {\n\n\n  participants: any;\n  event: any;\n  constructor(private location: Location,private route: ActivatedRoute, private attendanceservice:AttendanceService, private eventdetailservice: EventdetailService) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.params['id'];\n\n    this.eventdetailservice.getEventbyId(id).subscribe((data) => {\n      this.event = data.event;\n      console.log(data.event);\n      this.attendanceservice.getUsersByevent(id).subscribe((data) => {\n        this.participants=data.users;\n        console.log(this.participants);\n      })\n  });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}